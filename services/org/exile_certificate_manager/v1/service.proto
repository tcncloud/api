syntax = "proto3";

package services.org.exile_certificate_manager.v1;

import "annotations/authz.proto";
import "services/org/exile_certificate_manager/v1/certificate_info.proto";
import "google/api/annotations.proto";

// ExileCertificateManagerService is the service for managing organization's certificate info.
service ExileCertificateManagerService {
  // CreateCertificateInfo creates a new TLS certificate and
  // returns the certificate info for the current organization.
  rpc CreateCertificateInfo(CreateCertificateInfoRequest) returns (CreateCertificateInfoResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1/createcertificateinfo";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // DeleteCertificateInfo deletes a certificate info for the current organization.
  rpc DeleteCertificateInfo(DeleteCertificateInfoRequest) returns (DeleteCertificateInfoResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1/deletecertificateinfo";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // RevokeCertificateInfo deletes a certificate info for the current organization.
  rpc RevokeCertificateInfo(RevokeCertificateInfoRequest) returns (RevokeCertificateInfoResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1/revokecertificateinfo";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // ListCertificateInfo returns a list of certificate info for the current organization.
  rpc ListCertificateInfo(ListCertificateInfoRequest) returns (ListCertificateInfoResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1/listcertificateinfo";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }
}
