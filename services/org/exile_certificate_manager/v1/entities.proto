syntax = "proto3";

package services.org.exile_certificate_manager.v1;

import "google/protobuf/timestamp.proto";

// CertificateInfo contains the organization's certificate information.
message CertificateInfo {
  // The id of the certificate info.
  string certificate_info_id = 1;
  // The id of the organization.
  string org_id = 2;
  // The certificate name.
  string name = 3;
  // The certificate description.
  string description = 4;
  // The certificate hash/fingerprint.
  string hash = 5;
  // The certificate expiration date.
  google.protobuf.Timestamp expiration_date = 6;
  // The certificate creation date.
  google.protobuf.Timestamp creation_date = 7;
  // The requestor of the certificate (user id or automated system)
  string request_by = 8;
  // Whether the certificate info is deleted.
  bool deleted = 9;
  // Whether or not the certifcate has been revoked
  bool revoked = 10;
  // The id of the certificate configuration associated with the certificate.
  string certificate_configuration_id = 11;
  // The number of times the certificate has been renewed.
  int64 renewal_instance = 12;
}

// CertificateConfiguration contains the organization's configuration
// information for its certificates.
message CertificateConfiguration {
  // The id of the certificate configuration.
  string certificate_configuration_id = 1;
  // The id of the organization.
  string org_id = 2;
  // The configuration name.
  string name = 3;
  // The configuration description.
  string description = 4;
  // The type of certificate configuration.
  CertificateConfigurationType type = 5;
  // The parameters of the certificate configuration.
  // This is a JSON string with the following information:
  //   1. Database Host
  //   2. Database URL
  //   3. Database Port
  //   4. Database Username
  //   5. Database Password
  //   6. Max Number Connections
  //   7. Max Number Exile Jobs
  string parameters = 6;
}

// CertificateConfigurationType defines the types of certificate configuration.
enum CertificateConfigurationType {
  // Type Unspecified means the configuration type is not set.
  CERTIFICATE_CONFIGURATION_TYPE_UNSPECIFIED = 0;
  // Type None specifies that the configuration will not have any parameters.
  CERTIFICATE_CONFIGURATION_TYPE_NONE = 1;
  // Type Artiva HCX specifies the configuration for Artiva HCX (parameters required).
  CERTIFICATE_CONFIGURATION_TYPE_ARTIVA_HCX = 2;
  // Type Artiva RM specifies the configuration for Artiva RM (parameters required).
  CERTIFICATE_CONFIGURATION_TYPE_ARTIVA_RM = 3;
  // Type FACS specifies the configuration for FACS (parameters required).
  CERTIFICATE_CONFIGURATION_TYPE_FACS = 4;
}
