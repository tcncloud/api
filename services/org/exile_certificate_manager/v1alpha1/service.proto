syntax = "proto3";

package services.org.exile_certificate_manager.v1alpha1;

import "annotations/authz.proto";
import "google/api/annotations.proto";
import "services/org/exile_certificate_manager/v1alpha1/exile_certificate.proto";
import "services/org/exile_certificate_manager/v1alpha1/exile_configuration.proto";

// ExileCertificateManagerService is the service for managing organization's exile ceritificate.
service ExileCertificateManagerService {
  // CreateExileCertificate creates a new TLS certificate and
  // returns the exile ceritificate for the current organization.
  rpc CreateExileCertificate(CreateExileCertificateRequest) returns (CreateExileCertificateResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/createexilecertificate";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // RevokeExileCertificate deletes a exile ceritificate for the current organization.
  rpc RevokeExileCertificate(RevokeExileCertificateRequest) returns (RevokeExileCertificateResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/revokeexilecertificate";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // AssignExileConfiguration assigns a configuration to a certificate.
  rpc AssignExileConfiguration(AssignExileConfigurationRequest) returns (AssignExileConfigurationResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/assignexileconfiguration";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // UnassignExileConfiguration unassigns a configuration from a certificate.
  rpc UnassignExileConfiguration(UnassignExileConfigurationRequest) returns (UnassignExileConfigurationResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/unassignexileconfiguration";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // ListExileCertificates returns a list of exile ceritificate for the current organization.
  rpc ListExileCertificates(ListExileCertificatesRequest) returns (ListExileCertificatesResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/listexilecertificate";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // CreateExileConfiguration creates a new exile configuration for the current organization.
  rpc CreateExileConfiguration(CreateExileConfigurationRequest) returns (CreateExileConfigurationResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/createexileconfiguration";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // UpdateExileConfiguration updates a exile configuration for the current organization.
  rpc UpdateExileConfiguration(UpdateExileConfigurationRequest) returns (UpdateExileConfigurationResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/updateexileconfiguration";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // DeleteExileConfiguration deletes a exile configuration for the current organization.
  // The configuration can only be deleted if it is not assigned to any certificates.
  rpc DeleteExileConfiguration(DeleteExileConfigurationRequest) returns (DeleteExileConfigurationResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/deleteexileconfiguration";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }

  // ListExileConfigurations returns a list of exile configurations for the current organization.
  rpc ListExileConfigurations(ListExileConfigurationsRequest) returns (ListExileConfigurationsResponse) {
    option (google.api.http).post = "/services/org/exilecertificatemanager/v1alpha1/listexileconfigurations";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ]
    };
  }
}
