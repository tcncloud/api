syntax = "proto3";

package api.commons.audit;

import "api/commons/acd.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

///
/// This file contains event from Class 200
/// Vana events
///

// VanaFlagEvent represents a flag occurrence in voice analytics.
// It summarizes a set of transcripts flagged over an interval.
message VanaFlagEvent {
  // Required. User is not allowed to see flag sid.
  string flag_name = 1;

  // Required. Used for matching user notification settings.
  int64 flag_sid = 2;

  // Required. Link to voice analytics page that shows reported transcripts.
  string url = 3;

  // Required. Number of transcripts that were flagged.
  int64 num_transcripts = 4;

  // Required. Flag priority.
  int32 priority = 5;
}

// VanaFlagReviewEvent represents a flag that needs review in voice analytics.
// It summarizes a set of transcripts that need review.
message VanaFlagReviewEvent {
  // Required. User is not allowed to see flag sid.
  string flag_name = 1;

  // Required. Used for matching user notification settings.
  int64 flag_sid = 2;

  // Required. Link to voice analytics page that shows reported transcripts.
  string url = 3;

  // Required. Number of transcripts that were flagged.
  int64 num_transcripts = 4;

  // Required. Flag priority.
  int32 priority = 5;
}

// VanaBillingReportEvent represents a billing report in voice analytics.
// It gives a csv to a billing report of transcripts that occured that billing period.
message VanaBillingReportEvent {
  // Required. Report data start time.
  google.protobuf.Timestamp start_time = 1;

  // Required. Report data end time.
  google.protobuf.Timestamp end_time = 2;

  // Required. Report download url.
  string url = 3;
}

// VanaFlagSummaryEvent is the summary of the flagging process.
// It shows what transcripts were flagged.
message VanaFlagSummaryEvent {
  // Required. Report data start time.
  google.protobuf.Timestamp start_time = 1;

  // Required. Report data end time.
  google.protobuf.Timestamp end_time = 2;

  // Required. Flag Summaries
  repeated FlagSummary flag_summaries = 3;

  // FlagSummary is an overview of the flags in the transcript.
  message FlagSummary {
    int64 transcript_sid = 1;
    repeated int64 flag_sids = 2;
  }
}

// VanaPhraseCorrectionEvent is a user suggestion for what some words in a transcript
// should be changed to when the original translation is off.
message VanaPhraseCorrectionEvent {
  // Required. Start offset of the selected words in the transcript.
  google.protobuf.Duration start_offset = 1;

  // Required. End offset of the selected words in the transcript.
  google.protobuf.Duration end_offset = 2;

  // Required. Original text that the transcript was translated to.
  string original_text = 3;

  // Required. Proposed text of what the transcript text should be.
  string proposed_text = 4;

  // Required. Url of the call recording for the transcript.
  string url = 5;

  // Required. Channel that the words were spoken on.
  uint32 channel = 6;
}

// VanaCreateTranscriptEvent represents a newly created transcript.
message VanaCreateTranscriptEvent {
  int64 transcript_sid = 1;
  oneof metadata {
    Call call = 2;
    Sms sms = 3;
  }

  message Call {
    int64 call_sid = 1;
    api.commons.CallType.Enum call_type = 2;
    google.protobuf.Duration talk_time = 3;
    google.protobuf.Duration audio_time = 4;
  }

  message Sms {
    int64 conversation_sid = 1;
  }
}

// VanaCreateSentimentEvent represents the sentiment created for a transcript.
message VanaCreateSentimentEvent {
  // Required. Unique transcript id.
  int64 transcript_sid = 1;

  // Required. Metadata for the conversation that triggered the sentiment.
  oneof metadata {
    Call call = 2;
    Sms sms = 3;
  }

  // Call is call metadata.
  message Call {
    // Required. Unique when combined with call type.
    int64 call_sid = 1;

    // Required. Unique when combined with call sid.
    api.commons.CallType.Enum call_type = 2; //
  }

  // SMS is the sms metadata.
  message Sms {
    // Required. Unique conversation identifier.
    int64 conversation_sid = 1;
  }
}

// VanaCreateSummaryEvent represents the summary created for a transcript.
message VanaCreateSummaryEvent {
  // Required. Unique transcript id.
  int64 transcript_sid = 1;

  // Required. Metadata for the conversation that triggered the summary.
  oneof metadata {
    Call call = 2;
    Sms sms = 3;
  }

  // Call is call metadata.
  message Call {
    // Required. Unique when combined with call type.
    int64 call_sid = 1;

    // Required. Unique when combined with call sid.
    api.commons.CallType.Enum call_type = 2; //
  }

  // SMS is the sms metadata.
  message Sms {
    // Required. Unique conversation identifier.
    int64 conversation_sid = 1;
  }
}
