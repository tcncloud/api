syntax = "proto3";

package api.commons;

import "api/commons/chat.proto";
import "api/commons/enums.proto";
import "api/commons/lms.proto";
import "api/commons/org.proto";
import "api/commons/types.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// OmniCampaign -
message OmniCampaign {
  // the campaign identifier
  int64 campaign_sid = 1 [jstype = JS_STRING];
  // the campaign name
  string name = 2;
  // the campaign description
  string description = 3;
  // skills associated with the campaign
  OmniConversationSkills skills = 4;
  // time the campaign should start; null == (not scheduled) || (start now)
  google.protobuf.Timestamp start_date = 5;
  // campaign status (i.e. running|stopped|paused|etc.)
  api.commons.OmniCampaignStatus status = 6;
  // campaign channel type (chat|email|sms|etc.)
  api.commons.ChannelType channel_type = 7;
  // the time the campaign was created
  google.protobuf.Timestamp date_created = 8;
  // the time the campaign was last modified
  google.protobuf.Timestamp date_modified = 9;
  // identifier of the project the campaign belongs to
  int64 project_sid = 10 [jstype = JS_STRING];
  // associated modules
  repeated OmniCampaignModule modules = 11;
  // the campaign timezone
  api.commons.TimeZoneWrapper time_zone = 12;
  // shorten URL
  bool shorten_url = 13;
}

// OmniCampaign -
message OmniCampaignModule {
  // the campaign module identifier
  int64 campaign_module_sid = 1 [jstype = JS_STRING];
  // the campaign identifier
  int64 campaign_sid = 2 [jstype = JS_STRING];
  // module type (inbound|outbound)
  OmniCampaignModuleType module_type = 3;
  // campaign module status (running|stopped|etc.)
  OmniCampaignModuleStatus status = 4;
  // config data specific to the module
  OmniCampaignModuleConfig config = 5;
  // date module was created
  google.protobuf.Timestamp date_created = 6;
  // date module was last modified
  google.protobuf.Timestamp date_modified = 7;
  // when campaign is scheduled to stop; null == not a scheduled module
  google.protobuf.Timestamp scheduled_stop_date = 8;
  // time campaign was actually stopped; null == not stopped yet
  google.protobuf.Timestamp actual_stop_date = 9;
  // campaign module operating time; nullable
  WeekdayTimeRange hours_of_operation = 10;
  // read-only (i.e. only returned from the BE, never read, so setting this does nothing) selectable details when retrieving a module
  Details details = 11;
  // attachments
  repeated OmniAttachment attachments = 12;

  // Details -
  message Details {
    // the total number of tasks created by an outbound module
    google.protobuf.Int64Value total_task_count = 1;
    // the total number of tasks that have successfully completed for an outbound module
    google.protobuf.Int64Value completed_task_count = 2;
    // the name of the associated connected_inbox for this module
    google.protobuf.StringValue connected_inbox_address = 3;
    // the name of the associated verified_email for this module
    google.protobuf.StringValue verified_email_address = 4;
    // the number of tasks pending
    google.protobuf.Int64Value pending_task_count = 5;
    // the number of tasks that failed
    google.protobuf.Int64Value failed_task_count = 6;
  }
}

// OmniCampaignModuleConfig -
message OmniCampaignModuleConfig {
  // primary api key for chat widget
  google.protobuf.StringValue api_key_primary = 1;
  // secondary api key for chat widget
  google.protobuf.StringValue api_key_secondary = 2;
  // chat widget color properties
  ChatColorProperties color_properties = 3;
  // identifier of the connected inbox associated to the CampaignModule
  Int64Id connected_inbox_sid = 4;
  // list of dispositions associated to the CampaignModule
  repeated Disposition dispositions = 5;
  // email associated to the CampaignModule
  google.protobuf.StringValue email = 6;
  // message body
  google.protobuf.StringValue message_body = 7;
  // email subject
  google.protobuf.StringValue email_subject = 8;
  // sms number
  SmsNumber sms_number = 9;
  // chat widget header
  ChatHeader header = 10;
  // sla timeouts associated with the CampaignModule
  SLATimeouts sla_timeouts = 11;
  // maximum number of sends per hour for outbound CampaignModules
  google.protobuf.Int64Value sends_per_hour = 12;
  // identifier of associated custom unsubscribe link
  Int64Id unsubscribe_link_sid = 13;
  // verified email identifier
  Int64Id verified_email_sid = 15;
  // stop module with all tasks are completed
  google.protobuf.BoolValue stop_on_task_deplete = 16;
  // attachments
  repeated OmniAttachment attachments = 17;
  // Optional. compliance rule set to use for this campaign
  google.protobuf.StringValue compliance_rule_set_id = 18;
  // Payment Portal Ids
  repeated string payment_portal_ids = 19;
}

// SmsNumber
message SmsNumber {
  // string representation of the sms number
  string number = 1;
  // the type of sms number (Alphanumeric|Short Code|Number)
  SmsNumberType type = 2;
  // associated provider (Bandwidth|BurstSMS|etc.)
  SmsNumberProvider provider = 3;
  // country code the sms number belongs to
  int32 country_code = 4;
}

// SmsNumbertype
enum SmsNumberType {
  // SmsShortCodeType
  SMS_SHORT_CODE_TYPE = 0;
  // SmsAlphanumericType
  SMS_ALPHANUMERIC_TYPE = 1;
  // SmsNumberType
  SMS_NUMBER_TYPE = 2;
}

// SmsNumberProvider
enum SmsNumberProvider {
  // Unknown provider
  UNKNOWN_PROVIDER = 0;
  // BandwidthProvder
  BANDWIDTH_PROVIDER = 1;
  // BurstSMSProvider
  BURST_SMS_PROVIDER = 2;
  // PlivoProvider
  PLIVO_PROVIDER = 3;
  // ApeironProvider
  APEIRON_PROVIDER = 4;
  // AusburstSMSProvider
  AUSBURST_SMS_PROVIDER = 5;
}

// OmniCampaignModuleType -
enum OmniCampaignModuleType {
  // inbound module
  MODULE_TYPE_INBOUND = 0;
  // outbound module
  MODULE_TYPE_OUTBOUND = 1;
}

enum ChannelType {
  CHANNEL_TYPE_EMAIL = 0;
  CHANNEL_TYPE_SMS = 1;
  CHANNEL_TYPE_CHAT = 2;
  CHANNEL_TYPE_VOICE = 3;
}

// OmniCampaignDirection -
enum OmniCampaignDirection {
  // campaigns focused on receiving messages
  INBOUND = 0;
  // campaigns focused on sending messages
  OUTBOUND = 1;
}

enum OmniCampaignStatus {
  // COMPLETED_SUMMED = 650, CANCELLED = 700, CANCELLED_SUMMED = 750
  reserved 650, 700, 750;
  reserved "COMPLETED_SUMMED", "CANCELLED", "CANCELLED_SUMMED";

  // PREPARING = 0, SCHEDULING = 100, RUNNING_ERROR = 250
  reserved 100, 250;
  reserved "PREPARING", "RUNNING_ERROR";

  // ERROR_STANDBY = 300, RESUMING = 500
  reserved 300, 500;
  reserved "ERROR_STANDBY", "RESUMING";

  // Campaign has been created but hasn't reached it's start date
  SCHEDULING = 0;

  // Campaign that is able to process events
  RUNNING = 200;

  // Campaign was paused
  PAUSED = 400;

  // Campaign was finished
  COMPLETED = 600;

  // Campaign has been archived/closed
  ARCHIVED = 800;
}

enum OmniCampaignModuleStatus {
  // initial module status
  MODULE_PREPARING = 0;

  // module is in the process of getting scheduled
  MODULE_SCHEDULING = 100;

  // module is currently processing requests/data
  MODULE_RUNNING = 200;
  // module is processing requests/data, but has received an ERROR event
  MODULE_RUNNING_ERROR = 250;

  // module has received a FAIL event (i.e. too many consecutive errors have occurred)
  MODULE_ERROR_STANDBY = 300;

  // module is paused
  MODULE_PAUSED = 400;

  // module is preparing to run again
  MODULE_RESUMING = 500;

  // module has completed (i.e. finished, done running)
  MODULE_COMPLETED = 600;

  // module has been archived/closed
  MODULE_ARCHIVED = 700;
}

enum ConversationStatus {
  // Conversation was just created. It is both open and active
  CONVERSATION_STATUS_NEW = 0;

  // Conversation is waiting for the customer to reply. It is open but not active
  CONVERSATION_STATUS_AWAITING_REPLY_FROM_CUSTOMER = 1;
  // Conversation is waiting for the agent to reply. It is both open and active
  CONVERSATION_STATUS_AWAITING_REPLY_FROM_AGENT = 2;

  // The conversation is closed because of a timeout
  CONVERSATION_STATUS_CLOSED_TIMEOUT = 3;
  // The conversation is closed because of an action from the agent
  CONVERSATION_STATUS_CLOSED_AGENT = 4;
  // The conversation is closed because of an action from the customer
  CONVERSATION_STATUS_CLOSED_CUSTOMER = 5;

  // The conversation is suspended while waiting for the customer to reply
  CONVERSATION_STATUS_SUSPENDED_AWAITING_REPLY_FROM_CUSTOMER = 6;

  // the conversation was assigned at one point but it was unassigned and now its wait to be reassigned
  CONVERSATION_STATUS_AWAITING_ASSIGNMENT = 7;

  // the conversation was just assigned
  CONVERSATION_STATUS_NEWLY_ASSIGNED = 8;

  // The conversation is in wrap up via customer closing
  CONVERSATION_STATUS_WRAP_UP_CUSTOMER = 9;
  // The conversation is in wrap up after timeout.
  CONVERSATION_STATUS_WRAP_UP_TIMEOUT = 10;

  // The conversation is closed because of an action from the customer
  CONVERSATION_STATUS_CLOSED_MANAGER = 11;

  // Conversation was just created but we are waiting for the customer to reply
  CONVERSATION_STATUS_NEW_PENDING_CUSTOMER_REPLY = 12;

  //Conversation is being handled by flow engine
  CONVERSATION_STATUS_FLOW = 13;

  // Conversation was closed because a duplicate thread was created
  CONVERSATION_STATUS_CLOSED_DUPLICATE_THREAD = 14;
}

// indicates if we want to pull conversations that are assigned
// actively, not actively, or both
enum AgentAssignmentActiveSearchType {
  // The conversations that are actively assigned to the agent
  AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_ACTIVE = 0;
  // The conversations that are not actively assigned to the agent
  AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_INACTIVE = 1;
  // All conversations that are assigned to the agent
  AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_ALL = 2;
}

message ConversationCustomerInformation {
  string name = 1;
  string phone_number = 2;
  string email_address = 3;
}

enum AgentConversationAssignmentStatus {
  ACTIVE_AGENT = 0; // agent is active for the assigned conversation
  INACTIVE_AGENT = 1; // agent is not active for the assignment conversation
}

enum AgentConversationAssignmentType {
  PRIMARY_AGENT = 0; // primary agent for the assigned conversation
  SECONDARY_AGENT = 1; // secondary agent for the assigned conversation
}

message SLATimeouts {
  // max amount of time in seconds that it should take for an agent to respond to a customer message. Will reset after each customer response.
  int64 t1 = 1;
  // amount of time in seconds the conversation takes space in an agent's queue waiting for a customer's response
  int64 t2 = 2;
  // amount of time in seconds that the frontend system will wait for an agent response before a conversation gets reassigned
  int64 t3 = 3;
  // amount of time in seconds that the backend system will wait for an agent response before a conversation gets reassigned
  int64 t10 = 10;
  // amount of time in seconds that the backend system will wait for a customer response before a conversation gets closed
  int64 t11 = 11;
  // amount of time in seconds that the backend system will wait until a unassigned conversation is closed timeout
  int64 t12 = 12;
}

// represents a a list of information collected for a conversation
message ConversationCollectedData {
  // the list of data
  repeated ConversationCollectedData_Item items = 1;
}

// represents a piece of meta information collect for a particular conversation
message ConversationCollectedData_Item {
  // the id of the record
  int64 conversation_collected_data_sid = 1 [jstype = JS_STRING];
  // the id of the conversation
  int64 conversation_sid = 2 [jstype = JS_STRING];
  // the name of the data
  string data_name = 3;
  // the value of the data
  string data_value = 4;
  // when the data was collected
  google.protobuf.Timestamp collection_time = 5;
  // the user that collected the data (if this is not set then it was collected by the customer)
  google.protobuf.StringValue user_id = 6;
}

message OmniMessage {
  // this is the primary key or internal tcn identifier for the message
  int64 message_sid = 1 [jstype = JS_STRING];
  // this is the user id that sent the message - this can be not set which would
  // be the case if it's not an agent message
  google.protobuf.StringValue user_id = 4;
  // this is who the message is from
  // chat = if agent then user_id, if customer then name
  // email = email address
  // sms = phone number
  string sent_from = 5;
  // this is who the message is to
  // chat = if customer then name, otherwise leave as an empty string
  // email = email address
  // sms = phone number
  string sent_to = 6;
  // the message channel type
  ChannelType channel_type = 7;
  // this is how the message is referenced by the outside world
  // chat = not set
  // email = email message header
  // sms = not set
  google.protobuf.StringValue reference_id = 8;
  // this is an id that the UI generates so it's able to identify it when it sees it again
  string ui_reference_id = 10;
  // this is the payload of the message
  OmniMessagePayload payload = 11;
  // the id of the conversation. This is not required to be set because the message could
  // belong to a outbound campaign only
  Int64Id conversation_sid = 12;
  // the current status of the message.
  OmniMessageStatus status = 14;
  // the time the message was created
  google.protobuf.Timestamp date_created = 15;
  // the time the message was last modified
  google.protobuf.Timestamp date_modified = 16;
  // identifier of the campaign the message belongs to
  int64 campaign_sid = 17 [jstype = JS_STRING];
  // The subject of the conversation
  // chat = not set
  // email = the email subject line
  // sms = not set
  google.protobuf.StringValue subject = 19;
  // if this message is coming from omni boss is a manager message
  api.commons.OmniSenderType sender_type = 21;
  // status message
  google.protobuf.StringValue status_message = 22;
}

message CustomerChatWidgetMessage {
  // the id for this given message
  int64 message_sid = 1 [jstype = JS_STRING];
  // this is the payload of the message
  OmniMessagePayload payload = 2;
  // the time the message got publish and made available for other parties to
  google.protobuf.Timestamp date_created = 3;
  // a unique id created by the client to ensure it doesn't send the same message twice
  string ui_reference_id = 4;
  // that sender of this message
  api.commons.ConversationCustomerInformation customer_information = 5;
}

message AgentChatWidgetMessage {
  // the id for this given message
  int64 message_sid = 1 [jstype = JS_STRING];
  // this is the payload of the message
  OmniMessagePayload payload = 2;
  // the time the message got publish and made available for other parties to
  google.protobuf.Timestamp date_created = 3;
  // a unique id created by the client to ensure it doesn't send the same message twice
  string ui_reference_id = 4;
  // that sender of this message
  OmniConversationUserInformation user_information = 5;
  // the sender type of this message
  api.commons.OmniSenderType sender_type = 6;
}

message OmniMessagePayload {
  oneof payload {
    // text message
    OmniTextMessage text_message = 100;
    // typing notification
    OmniTypingNotification typing_notification = 101;
    // reassignment notification
    OmniReassignmentNotification reassignment = 102;
    // requesting attachment upload url
    OmniRequestAttachmentUploadURL request_attachment_upload_url = 103;
    // attachment upload url
    OmniAttachmentUploadURL attachment_upload_url = 104;
    // attachment
    OmniAttachment attachment = 105;
    // close conversation
    OmniCloseConversation close_conversation = 106;
    // assign conversation
    OmniAssignConversation assign_conversation = 107;
    // unassign conversation
    OmniUnassignConversation unassign_conversation = 108;
    // finished wrap up
    OmniFinishWrapUp finish_wrap_up = 109;
    // suspend
    OmniSuspend suspend = 110;
    // start wrap up
    OmniStartWrapUp start_wrap_up = 111;
    // queue information
    OmniQueueInformation queue_information = 112;
    // request queue information
    OmniRequestQueueInformation request_queue_information = 113;
    // off loaded text message
    OmniOffLoadedTextMessage off_loaded_text_message = 114;
    // canned message
    OmniCannedMessage canned_message = 115;
  }
}

message OmniTextMessage {
  // message containing Urls
  string message = 1;
  // attachments
  repeated OmniAttachment attachments = 2;
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 3;
}

message OmniOffLoadedTextMessage {
  string location = 1;
  repeated OmniAttachment attachments = 2;
}

message OmniTypingNotification {}

// assign conversation to agent
message OmniAssignConversation {
  // agent user id
  string user_id = 1;
  // user name used to display in the UI. This field is only set by
  // the backend when the payload is being sent to the UI
  string user_name = 2;
  // primary asm session identifier
  int64 primary_asm_session_sid = 5;
}

// OmniMessage payload for reassigning agents
message OmniReassignmentNotification {
  // the id of the assigned user
  string current_user_id = 1;
  // current user name used to display in the UI. This field is only set by
  // the backend when the payload is being sent to the UI
  string current_user_name = 2;
  // the id of the user to be assigned
  string new_user_id = 3;
  // new user name used to display in the UI. This field is only set by
  // the backend when the payload is being sent to the UI
  string new_user_name = 4;
  // new user asm session sid
  google.protobuf.Int64Value new_user_asm_session_sid = 5;
}

// OmniMessage payload for unassigning an agent(s)
message OmniUnassignConversation {
  // the id of the user to unassign
  google.protobuf.StringValue user_id = 1;
  // user name used to display in the UI. This field is only set by
  // the backend when the payload is being sent to the UI
  string user_name = 4;
  // whether or not all users should be unassigned
  bool all = 2;
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 5;
}

message OmniRequestAttachmentUploadURL {}

// attachment upload details
message OmniAttachmentUploadURL {
  //attachment file upload url
  string upload_url = 1;
  //attachment id
  string id = 2;
}

// attachment details
message OmniAttachment {
  // primary key or internal identifier for attachment
  int64 omni_attachment_sid = 1 [jstype = JS_STRING];
  // attachment file name
  string name = 2;
  // attachment file type
  string file_type = 3;
  // attachment file size
  int64 file_size = 4;
  // attachment file path
  string path = 5;
  // temp id
  google.protobuf.StringValue temp_id = 6;
  // download attachment file url
  string download_url = 7;
  // time when the attachment was created
  google.protobuf.Timestamp date_created = 8;
  // time when the attachment was last modified
  google.protobuf.Timestamp date_modified = 9;
  // Optional. the id of the attachment in text if inline
  google.protobuf.StringValue content_id = 10;
  // Optional. the width of the inline attachment
  google.protobuf.StringValue width = 11;
  // Optional. the height of the inline attachment
  google.protobuf.StringValue height = 12;
}

message OmniStartWrapUp {
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 1;
}

message OmniFinishWrapUp {
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 1;
}

message OmniSuspend {
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 1;
}

message OmniCloseConversation {
  // primary asm session identifier
  google.protobuf.Int64Value primary_asm_session_sid = 1;
}

message OmniQueueInformation {
  int64 position = 1;
}

message OmniRequestQueueInformation {
  bool position = 1;
}

message OmniCannedMessage {
  // canned message id
  string canned_message_id = 1;
}

enum OmniMessageStatus {
  OMNI_MESSAGE_CREATED = 0;

  OMNI_INBOUND_MESSAGE_RECEIVED = 16000; // message received from customer

  OMNI_OUTBOUND_MESSAGE_RECEIVED = 16010; // message received from agent
  OMNI_OUTBOUND_MESSAGE_WAITING = 16100; // message is ready to be sent
  OMNI_OUTBOUND_MESSAGE_PROCESSING = 16110; // message is sent
  OMNI_OUTBOUND_MESSAGE_DNC = 16120; // message is on Do Not Call list
  OMNI_OUTBOUND_MESSAGE_INVALID = 16130; // message is flagged as invalid
  OMNI_OUTBOUND_MESSAGE_ATTACHMENT_ERROR = 16140; // message was cancelled due to an attachment error
  OMNI_OUTBOUND_MESSAGE_CANCELLED = 16150; // message was cancelled
  OMNI_OUTBOUND_MESSAGE_QUEUED = 16160; // message is queued in provider
  OMNI_OUTBOUND_MESSAGE_DELIVERED = 16170; // message has been delivered to receiver
  OMNI_OUTBOUND_MESSAGE_DROPPED = 16180; // message was dropped
  OMNI_OUTBOUND_MESSAGE_DEFERRED = 16190; // message was temporarily rejected
  OMNI_OUTBOUND_MESSAGE_BOUNCED = 16200; // receiver could not/would not accept message
  OMNI_OUTBOUND_MESSAGE_OPENED = 16210; // message was opened
  OMNI_OUTBOUND_MESSAGE_CLICKED = 16220; // link in message was clicked
  OMNI_OUTBOUND_MESSAGE_UNSUBSCRIBED = 16230; // recipient clicked on unsubscribe link
  OMNI_OUTBOUND_MESSAGE_MARKED_AS_SPAM = 16240; // message marked as spam
  OMNI_OUTBOUND_MESSAGE_BLOCKED = 16250; // message marked as blocked

  OMNI_SYSTEM_MESSAGE = 16050; // message sent from system
}

message OmniConversationUserInformation {
  string user_id = 1;
  string name = 2;
}

// represents a a list of customer information collected for a conversation
message CustomerCollectedData {
  // the list of data
  repeated CustomerCollectedDataItem items = 1;
}

// represents customer information collected for a conversation
message CustomerCollectedDataItem {
  // the key of the data
  string key = 1;
  // the value of the data
  string value = 2;
}

// OmniConversation -
message OmniConversation {
  // primary key or internal identifier for conversation
  int64 conversation_sid = 1 [jstype = JS_STRING];
  // the conversation's channel type i.e. chat|email|sms|etc.
  ChannelType channel_type = 2;
  // the agent's skills
  OmniConversationSkills skills = 3;
  // when the conversation was created
  google.protobuf.Timestamp date_created = 4;
  // time the conversation was last modified
  google.protobuf.Timestamp date_modified = 5;
  // the current status of the conversation i.e. AwaitingAssignment
  ConversationStatus status = 6;
  // the customer's email address
  google.protobuf.StringValue customer_email_address = 7;
  // the customer's phone number
  google.protobuf.StringValue customer_phone_number = 8;
  // the customer's name
  google.protobuf.StringValue customer_name = 9;
  // the identifier of the inbound campaign this conversation is a part of
  int64 campaign_sid = 10 [jstype = JS_STRING];
  // the identifier used to reference this conversation
  google.protobuf.StringValue reference_id = 11;
  // time the last message was received
  google.protobuf.Timestamp last_message_time = 12;
  // information collected during the conversation
  ConversationCollectedData conversation_collected_data = 13;
  // SLA timers
  SLATimeouts sla_timeouts = 14;
  // assignments list
  repeated OmniConversationAssignment conversation_assignments = 15;
  // conversation optional metadata
  ConversationDetails metadata = 16;
  // time the conversation was ended
  google.protobuf.Timestamp end_time = 18;
  // the identifier of the campaign module this conversation is a part of
  int64 campaign_module_sid = 19 [jstype = JS_STRING];
  // the time that the last group of message started. A message group is a
  // continuous set of messages from the same type of sender
  google.protobuf.Timestamp last_message_group_time = 20;
  // the sender type of the last message group
  OmniSenderType last_message_group_type = 21;
  // the result type of the conversation
  OmniConversationResult result = 22;
  // time the status was changed
  google.protobuf.Timestamp last_state_changed_time = 23;

  // metadata details related to the conversation
  message ConversationDetails {
    // the associated campaign's name
    string campaign_name = 1;
    // support_email
    string support_email = 2;
    // campaign shorten url
    bool campaign_shorten_url = 3;
    // payment portal ids
    repeated string payment_portal_ids = 4;
  }
}

// OmniConversationAssignment -
message OmniConversationAssignment {
  // primary key or internal identifier for conversation
  int64 conversation_assignment_sid = 1 [jstype = JS_STRING];
  // conversation id
  int64 conversation_sid = 2 [jstype = JS_STRING];
  // is an active
  bool is_active = 5;
  // type of assignment
  api.commons.AgentConversationAssignmentType assignment_type = 6;
  // date assignment was created
  google.protobuf.Timestamp date_created = 7;
  // date assignment was last modified
  google.protobuf.Timestamp date_modified = 8;
  // user assigned to the conversation
  string user_id = 9;
  // conversation assignment optional metadata
  ConversationAssignmentDetails metadata = 10;

  // metadata details related to the conversation assignment
  message ConversationAssignmentDetails {
    // the assigned user's name
    string user_name = 1;
  }
  // asm conversations id
  int64 asm_session_sid = 11;
}

// OmniConversationResult -
enum OmniConversationResult {
  NONE = 0;
  ABANDONED = 1;
}

// OmniConversationSkills -
message OmniConversationSkills {
  // map of agent skills
  map<string, bool> skills = 1;
}

// WeekdayTimeRange - a group of time range entries
message WeekdayTimeRange {
  // the group of time ranges
  repeated WeekdayTimeRangeEntry entries = 1;
}

// WeekdayTimeRangeEntry - an entry defining the same time range over a span of one or more days
message WeekdayTimeRangeEntry {
  // the day the span starts
  api.commons.Weekday.Enum start_day = 1;
  // the hour the range starts
  int64 start_hour = 2;
  // the minute the range starts
  int64 start_minute = 3;
  // the day the span ends
  api.commons.Weekday.Enum end_day = 4;
  // the hour the range ends
  int64 end_hour = 5;
  // the minute the range ends
  int64 end_minute = 6;
}

// Disposition -
message Disposition {
  // the unique identifier of the disposition
  int64 disposition_sid = 1 [jstype = JS_STRING];
  // the time the disposition was created
  google.protobuf.Timestamp date_created = 2;
  // the time the disposition was last modified
  google.protobuf.Timestamp date_modified = 3;
  // the disposition string
  string disposition = 4;
  // if the disposition was deleted
  bool deleted = 5;
}

// GetQueuesDetailsRes - response for GetQueuesDetails
message GetQueuesDetailsRes {
  // the queue details
  repeated QueueDetails queue_details = 1;
  // hold the details about a queue
  message QueueDetails {
    // the channel type for the queue
    ChannelType channel_type = 1;
    // the size of the queue
    int64 queueSize = 2;
  }
}

// OmniTaskStatus -
enum OmniTaskStatus {
  OMNI_TASK_WAITING = 0; // initial task created waiting to be processed
  OMNI_TASK_SENDING = 100; // the task is currently being sent
  OMNI_TASK_SENDING_FAILED = 110; // the task attempted to send but failed
  OMNI_TASK_SENDING_INCOMPLETE = 111; // the task began the process of sending but did not complete
  OMNI_TASK_SENT = 120; // the task successfully sent
  OMNI_TASK_RECEIVED = 130; // the task was received by the destination
}

// OmniCustomUnsubscribeLink -
message OmniCustomUnsubscribeLink {
  // unique identifier for the custom unsubscribe link
  int64 custom_unsubscribe_link_sid = 1 [jstype = JS_STRING];
  // the name of the link
  string link_name = 2;
  // the link's url
  string link_url = 3;
  // if the link has been validated
  bool validated = 4;
  // the time the link was created
  google.protobuf.Timestamp date_created = 5;
  // the time the link was last modified
  google.protobuf.Timestamp date_modified = 6;
  // the time the link was validated
  google.protobuf.Timestamp date_validated = 7;
  // the link's description
  string description = 9;
  // if the link was deleted
  bool deleted = 10;
}

enum OmniSenderType {
  OMNI_SENDER_TYPE_AGENT = 0;
  OMNI_SENDER_TYPE_CUSTOMER = 1;
  OMNI_SENDER_TYPE_SYSTEM = 2;
  OMNI_SENDER_TYPE_MANAGER = 3;
  OMNI_SENDER_TYPE_FLOW = 4;
}

// ContactList -
message ContactList {
  // the unique identifier of the contact list
  int64 contact_list_sid = 1 [jstype = JS_STRING];
  // the name string
  string name = 2;
  // the description string
  string description = 3;
  // list of field names
  repeated string field_names = 4;
  // the project sid
  Int64Id project_sid = 6;
  // the time the disposition was created
  google.protobuf.Timestamp date_created = 7;
  // the time the disposition was last modified
  google.protobuf.Timestamp date_modified = 8;
  // the list of contact entries
  repeated ContactEntry contact_entries = 9;
  // metaData
  Metadata metadata = 10;
  // Metadata - contains extra details for contact lists
  message Metadata {
    int64 entry_count = 1;
  }
}

// ContactEntry -
message ContactEntry {
  // the unique identifier of the contact entry list
  int64 contact_entry_sid = 1 [jstype = JS_STRING];
  // the identifier of the contact list
  int64 contact_list_sid = 2 [jstype = JS_STRING];
  // the time the disposition was created
  google.protobuf.Timestamp date_created = 3;
  // the time the disposition was last modified
  google.protobuf.Timestamp date_modified = 4;
  // the list of field names
  repeated string field_names = 5;
  // list of fields associated to contact entry (can contain different types of data: string|int64|etc.)
  repeated OmniDataField data_fields = 6;
}

// OmniTask -
message OmniTask {
  reserved 14;
  // the task identifier
  int64 task_sid = 1 [jstype = JS_STRING];
  // the task status
  api.commons.OmniTaskStatus status = 2;
  // the time the task was created
  google.protobuf.Timestamp date_created = 3;
  // the time the task was last updated
  google.protobuf.Timestamp date_modified = 4;
  // identifier of associated campaign module
  int64 campaign_module_sid = 5 [jstype = JS_STRING];
  // identifier of associated campaign
  int64 campaign_sid = 6 [jstype = JS_STRING];
  // identifier of associated contact entry
  Int64Id contact_entry_sid = 7;
  // task state
  OmniTaskState state = 8;
  // list of fields associated to task (can contain different types of data: string|int64|etc.)
  repeated OmniDataField data_fields = 9;
  // retrievable fields with field mask
  Details details = 10;
  // the name of the task for easy identification of a task (this is generated by mapping contact entry fields as provided by the ui)
  string name = 11;
  // a message regarding the task's status, should be ignored if there is an associated OmniMessage
  google.protobuf.StringValue status_message = 12;
  // scheduled time for task
  google.protobuf.Timestamp scheduled_time = 13;

  message Details {
    // name of the contact list
    google.protobuf.StringValue contact_list_name = 1;
  }
}

// OmniTaskState -
message OmniTaskState {
  // list of destination addresses (should not include same destination twice)
  repeated Entry destinations = 1;
  // list of source addresses (should not include same source twice)
  repeated Entry sources = 2;
  // the rule set used with the task. This won't be set if a rule set didn't exist
  // when the task ran.
  ComplianceRuleSet rule_set = 3;

  message Entry {
    // address (email_address|phone_number|etc.)
    string address = 1;
    // times address was used
    int64 times_used = 2;
    // the time this entry was last used
    google.protobuf.Timestamp last_used = 3;
  }
}

// ComplianceRuleSet -
message ComplianceRuleSet {
  // the compliance rule set identifier
  string id = 1;
  // name of the compliance rule set
  string name = 2;
  // the SHA indicating the version of the rule set
  string sha = 3;
  // list of compliance rules ran in this version of the
  // rule set.
  repeated ComplianceRule rules = 4;
}

// ComplianceRule -
message ComplianceRule {
  // text representation of the compliance rule
  string text = 1;
  // whether the compliance rule passed or not
  bool permit = 2;
  // extra response data
  string plugin_response = 3;
}

// OmniDataField -
message OmniDataField {
  // the field identifier
  int64 field_sid = 1 [jstype = JS_STRING];
  // the identifier of the "parent" this field belongs to
  int64 parent_sid = 2 [jstype = JS_STRING];
  // the name of this field
  string name = 3;
  // the value of this field encoded as a string
  string value = 4;
  // the type of value stored in this field (string|json|int|etc.)
  FieldType type = 5;
}

// ConnectedInbox -
message ConnectedInbox {
  // connected inbox identifier
  int64 connected_inbox_sid = 1 [jstype = JS_STRING];
  // connected email address
  string email_address = 2;
  // username for accessing email
  string username = 3;
  // password for accessing email
  string password = 4;
  // how often the email should be checked (in minutes)
  int64 check_frequency_minutes = 5;
  // server name the email is located on
  string server_name = 6;
  // server port the email is located on
  int64 server_port = 7;
  // time the email was last scheduled to be checked
  google.protobuf.Timestamp last_scheduled_time = 8;
  // time the email was last checked
  google.protobuf.Timestamp last_checked = 9;
  // how many emails should build up before getting purged
  int64 purge_threshold = 10;
  // salt used in encoding
  string email_salt = 11;
  // number of consecutive failures allowed before entering an ERROR_STANDBY state
  int32 num_consecutive_failures = 12;
  // the last error that occurred
  google.protobuf.StringValue last_error = 13;
  // time the email entered ERROR_STANDBY
  google.protobuf.Timestamp standby_error_time = 14;
  // time the inbox was last updated
  google.protobuf.Timestamp last_updated = 15;
  // maximum message size
  int32 max_message_size = 16;
  // maximum number of messages
  int32 max_messages = 17;
  // google xoauth2 refresh token (if using google xoauth2)
  google.protobuf.StringValue google_xoauth2_refresh_token = 18;
  // google xoauth2 access token (if using google xoauth2)
  google.protobuf.StringValue google_xoauth2_access_token = 19;
  // time the google xoauth2 access token expires (if using google xoauth2)
  google.protobuf.Timestamp google_xoauth2_access_token_expiration = 20;
  // type of authentication that should be used
  ConnectedInboxAuthenticationType authentication_type = 21;
}

// ConnectedInboxAuthenticationType -
enum ConnectedInboxAuthenticationType {
  CONNECTED_INBOX_AUTHENTICATION_TYPE_PASSWORD = 0;
  CONNECTED_INBOX_AUTHENTICATION_TYPE_GOOGLE_XOAUTH2 = 1;
}

// VerifiedEmail -
message VerifiedEmail {
  // verified email identifier
  int64 verified_email_sid = 1 [jstype = JS_STRING];
  // verification key
  google.protobuf.StringValue verification_key = 2;
  // connected email address
  string email_address = 3;
  // if the email has been verified
  bool verified = 4;
  // when the verified email was created
  google.protobuf.Timestamp created_on = 5;
  // when the email was verified
  google.protobuf.Timestamp verified_on = 6;
  // if the email was deleted
  bool deleted = 7;
  // description of the email
  google.protobuf.StringValue description = 8;
}

// Signature - a preset ending to outgoing messages
message Signature {
  // unique identifier for the signature
  int64 signature_sid = 1 [jstype = JS_STRING];
  // the signature text
  string signature = 2;
  // when the signature was created
  google.protobuf.Timestamp date_created = 3;
  // when the signature was last updated
  google.protobuf.Timestamp date_modified = 4;
  // when the signature was deleted (if ever)
  google.protobuf.Timestamp deleted_on = 5;
  // name for the signature
  string name = 6;
  // description for the signature
  string description = 7;
}

// ConversationStateChangeTimerName -
enum ConversationStateChangeTimerName {
  CONVERSATION_STATE_CHANGE_TIMER_NAME_WAIT = 0;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK = 100;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_INITIAL_AGENT_RESPONSE = 101;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_AGENT_RESPONSE = 102;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_CUSTOMER_RESPONSE = 103;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_SUSPENDED = 104;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_WRAP_UP = 200;
  CONVERSATION_STATE_CHANGE_TIMER_NAME_IDLE = 300;
}

// OmniConversationMetadataName -
enum OmniConversationMetadataName {
  AGENT_RESPONSE_TIME = 0;
  CUSTOMER_WAIT_TIME = 1;
  HANDLE_TIME = 2;
  TRANSCRIPT_PATH = 3;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_WAIT = 10;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK = 100;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_INITIAL_AGENT_RESPONSE = 101;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_AGENT_RESPONSE = 102;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_CUSTOMER_RESPONSE = 103;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_SUSPENDED = 104;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_WRAP_UP = 200;
  OMNI_CONVERSATION_METADATA_NAME_TIMER_IDLE = 300;
}

enum ProjectStatus {
  PROJECT_STATUS_UNKNOWN = 0;
  PROJECT_STATUS_OPEN = 17000; //Project status is Open
  PROJECT_STATUS_CLOSED = 17010; //Project status is Closed
}

enum CampaignStatus {
  CAMPAIGN_STATUS_SCHEDULED = 0;
  CAMPAIGN_STATUS_RUNNING = 1;
  CAMPAIGN_STATUS_PAUSED = 2;
  CAMPAIGN_STATUS_COMPLETED = 3;
  CAMPAIGN_STATUS_CANCELED = 4;
  CAMPAIGN_STATUS_ERROR_PAUSED = 5;
}

enum CampaignDirection {
  CAMPAIGN_DIRECTION_INBOUND = 0;
  CAMPAIGN_DIRECTION_OUTBOUND = 1;
}
