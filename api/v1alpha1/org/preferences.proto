syntax = "proto3";

package api.v1alpha1.org;

import "api/commons/org.proto";
import "api/commons/org/preferences.proto";
import "google/protobuf/field_mask.proto";

//
// General tab preferences.
//

// Request for the GetOrganizationPreferences RPC.
message GetOrganizationPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetOrganizationPreferences RPC.
message GetOrganizationPreferencesResponse {
  // Organization preferences entity.
  api.commons.org.OrganizationPreferences organization_preferences = 1;
}

// Request for the UpdateOrganizationPreferences RPC.
message UpdateOrganizationPreferencesRequest {
  // Organization preferences entity.
  api.commons.org.OrganizationPreferences organization_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateOrganizationPreferences RPC.
message UpdateOrganizationPreferencesResponse {}

// Request for the GetAgentPreferences RPC.
message GetAgentPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetAgentPreferences RPC.
message GetAgentPreferencesResponse {
  // Agent preferences entity.
  api.commons.org.AgentPreferences agent_preferences = 1;
}

// Request for the UpdateAgentPreferences RPC.
message UpdateAgentPreferencesRequest {
  // Agent preferences entity.
  api.commons.org.AgentPreferences agent_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateAgentPreferences RPC.
message UpdateAgentPreferencesResponse {}

// Request for the GetContactPreferences RPC.
message GetContactPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetContactPreferences RPC.
message GetContactPreferencesResponse {
  // Contact preferences entity.
  api.commons.org.ContactPreferences contact_preferences = 1;
}

// Request for the UpdateContactPreferences RPC.
message UpdateContactPreferencesRequest {
  // Contact preferences entity.
  api.commons.org.ContactPreferences contact_preferences = 1;
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateContactPreferences RPC.
message UpdateContactPreferencesResponse {}

// Request for the GetAuthenticationPreferences RPC.
message GetAuthenticationPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetAuthenticationPreferences RPC.
message GetAuthenticationPreferencesResponse {
  // Authentication preferences entity.
  api.commons.org.AuthenticationPreferences authentication_preferences = 1;
}

// Request for the UpdateAuthenticationPreferences RPC.
message UpdateAuthenticationPreferencesRequest {
  // Authentication preferences entity.
  api.commons.org.AuthenticationPreferences authentication_preferences = 1;
  // The duo client secret to be used for mfa
  string duo_client_secret = 5;
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateAuthenticationPreferences RPC.
message UpdateAuthenticationPreferencesResponse {}

// Request for the GetWebhookPreferences RPC.
message GetWebhookPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetWebhookPreferences RPC.
message GetWebhookPreferencesResponse {
  // Webhook preferences entity.
  api.commons.org.WebhookPreferences webhook_preferences = 1;
}

// Request for the UpdateWebhookPreferences RPC.
message UpdateWebhookPreferencesRequest {
  // Webhook preferences entity.
  api.commons.org.WebhookPreferences webhook_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateWebhookPreferences RPC.
message UpdateWebhookPreferencesResponse {}

//
// MANAGER TAB
//

// Request for the GetDashboardGeneralPreferences RPC.
message GetDashboardGeneralPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetDashboardGeneralPreferences RPC.
message GetDashboardGeneralPreferencesResponse {
  // Dashboard preferences entity.
  api.commons.org.DashboardPreferences dashboard_preferences = 1;
}

// Request for the UpdateDashboardGeneralPreferences RPC.
message UpdateDashboardGeneralPreferencesRequest {
  // Dashboard preferences entity.
  api.commons.org.DashboardPreferences dashboard_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateDashboardGeneralPreferences RPC.
message UpdateDashboardGeneralPreferencesResponse {}

// Request for the GetDashboardQueuePreferences RPC.
message GetDashboardQueuePreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetDashboardQueuePreferences RPC.
message GetDashboardQueuePreferencesResponse {
  // Dashboard queue preferences entity.
  api.commons.org.DashboardQueuePreferences dashboard_queue_preferences = 1;
}

// Request for the UpdateDashboardQueuePreferences RPC.
message UpdateDashboardQueuePreferencesRequest {
  // Dashboard queue preferences entity.
  api.commons.org.DashboardQueuePreferences dashboard_queue_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Respons for the UpdateDashboardQueuePreferences RPC.
message UpdateDashboardQueuePreferencesResponse {}

//
// Campaign tab preferences.
//

// Request for the GetPhonePreferences RPC.
message GetPhonePreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetPhonePreferences RPC.
message GetPhonePreferencesResponse {
  // Phone preferences entity.
  api.commons.org.PhonePreferences phone_preferences = 1;
}

// Request for the UpdatePhonePreferences RPC.
message UpdatePhonePreferencesRequest {
  // Phone preferences entity.
  api.commons.org.PhonePreferences phone_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdatePhonePreferences RPC.
message UpdatePhonePreferencesResponse {}

// Internal phone preferences entity only for interfacing with database.
message PhonePreferencesDB {
  // Org ID.
  string org_id = 1;

  // Marshalled json representing the phone preferences entity.
  string phone_preferences_json = 10;
}

// Request for the GetCompliancePreferences RPC.
message GetCompliancePreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetCompliancePreferences RPC.
message GetCompliancePreferencesResponse {
  // Compliance preferences entity.
  api.commons.org.CompliancePreferences compliance_preferences = 1;
}

// Request for the UpdateCompliancePreferences RPC.
message UpdateCompliancePreferencesRequest {
  // Compliance preferences entity.
  api.commons.org.CompliancePreferences compliance_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateCompliancePreferences RPC.
message UpdateCompliancePreferencesResponse {}

// Request for the GetBroadcastPreferences RPC.
message GetBroadcastPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetBroadcastPreferences RPC.
message GetBroadcastPreferencesResponse {
  // Broadcast preferences entity.
  api.commons.org.BroadcastPreferences broadcast_preferences = 1;
}

// Request for the UpdateBroadcastPreferences RPC.
message UpdateBroadcastPreferencesRequest {
  // Broadcast preferences entity.
  api.commons.org.BroadcastPreferences broadcast_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateBroadcastPreferences RPC.
message UpdateBroadcastPreferencesResponse {}

// Request for the GetSchedulePreferences RPC.
message GetSchedulePreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetSchedulePreferences RPC.
message GetSchedulePreferencesResponse {
  // Schedule preferences entity.
  api.commons.org.SchedulePreferences schedule_preferences = 1;
}

// Request for the UpdateSchedulePreferences RPC.
message UpdateSchedulePreferencesRequest {
  // Schedule preferences entity.
  api.commons.org.SchedulePreferences schedule_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateSchedulePreferences RPC.
message UpdateSchedulePreferencesResponse {}

// Request for the GetEmailSmsPreferences RPC.
message GetEmailSmsPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetEmailSmsPreferences RPC.
message GetEmailSmsPreferencesResponse {
  // Email/SMS preferences entity.
  api.commons.org.EmailSmsPreferences email_sms_preferences = 1;
}

// Request for the UpdateEmailSmsPreferences RPC.
message UpdateEmailSmsPreferencesRequest {
  // Email/SMS preferences entity.
  api.commons.org.EmailSmsPreferences email_sms_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateEmailSmsPreferences RPC.
message UpdateEmailSmsPreferencesResponse {}

//
// Business Intelligence & Reports tab preferences.
//

// Request for the GetBusinessPreferences RPC.
message GetBusinessPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetBusinessPreferences RPC.
message GetBusinessPreferencesResponse {
  // Business preferences entity.
  api.commons.org.BusinessPreferences business_preferences = 1;
}

// Request for the UpdateBusinessPreferences RPC.
message UpdateBusinessPreferencesRequest {
  // Business preferences entity.
  api.commons.org.BusinessPreferences business_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateBusinessPreferences RPC.
message UpdateBusinessPreferencesResponse {}

// Request for the UpdateAdminBusinessPreferences RPC.
message UpdateAdminBusinessPreferencesRequest {
  string org_id = 1;
  // Business preferences entity.
  api.commons.org.BusinessPreferences business_preferences = 2;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateAdminBusinessPreferences RPC.
message UpdateAdminBusinessPreferencesResponse {}

// Request for GetScorecardsPreferences
message GetScorecardsPreferencesRequest {
  // Org ID.
  string org_id = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for GetScorecardsPreferences
message GetScorecardsPreferencesResponse {
  // Scorecards preferences entity.
  api.commons.org.ScorecardsPreferences scorecards_preferences = 1;
}

// Request for UpdateScorecardsPreferences
message UpdateScorecardsPreferencesRequest {
  // Org ID.
  string org_id = 1;
  // Scorecards preferences entity.
  api.commons.org.ScorecardsPreferences scorecards_preferences = 2;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 3;
}

// Response for UpdateScorecardsPreferences
message UpdateScorecardsPreferencesResponse {}

// Request for the GetVoiceAnalyticsPreferences RPC.
message GetVoiceAnalyticsPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetVoiceAnalyticsPreferences RPC.
message GetVoiceAnalyticsPreferencesResponse {
  // Voice analytics preferences entity.
  api.commons.org.VoiceAnalyticsPreferences voice_analytics_preferences = 1;
}

// Request for the ListVoiceAnalyticsPreferences RPC.
message ListVoiceAnalyticsPreferencesRequest {}

// Response for the ListVoiceAnalyticsPreferences RPC.
message ListVoiceAnalyticsPreferencesResponse {
  // List of voice analytics preferences.
  repeated api.commons.org.VoiceAnalyticsPreferences voice_analytics_preferences = 1;
}

// Request for the UpdateVoiceAnalyticsPreferences RPC.
message UpdateVoiceAnalyticsPreferencesRequest {
  // Voice analytics preferences entity.
  api.commons.org.VoiceAnalyticsPreferences voice_analytics_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateVoiceAnalyticsPreferences RPC.
message UpdateVoiceAnalyticsPreferencesResponse {}

// Request for the GetEndOfDayPreferences RPC.
message GetEndOfDayPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetEndOfDayPreferences RPC.
message GetEndOfDayPreferencesResponse {
  // EndOfDay preferences entity.
  api.commons.org.EndOfDayPreferences end_of_day_preferences = 1;
}

// Request for the UpdateEndOfDayPreferences RPC.
message UpdateEndOfDayPreferencesRequest {
  // End-of-day preferences entity.
  api.commons.org.EndOfDayPreferences end_of_day_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateEndOfDayPreferences RPC.
message UpdateEndOfDayPreferencesResponse {}

// Request for the GetFilterPreferences RPC.
message GetFilterPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetFilterPreferences RPC.
message GetFilterPreferencesResponse {
  // Filter preferences entity.
  api.commons.org.FilterPreferences filter_preferences = 1;
}

// Request for the UpdateFilterPreferences RPC.
message UpdateFilterPreferencesRequest {
  // Filter preferences entity.
  api.commons.org.FilterPreferences filter_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateFilterPreferences RPC.
message UpdateFilterPreferencesResponse {}

// Request for the GetRecordingPreferences RPC.
message GetRecordingPreferencesRequest {
  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 1;
}

// Response for the GetRecordingPreferences RPC.
message GetRecordingPreferencesResponse {
  // Recording preferences entity.
  api.commons.org.RecordingPreferences recording_preferences = 1;
}

// Request for the UpdateRecordingPreferences RPC.
message UpdateRecordingPreferencesRequest {
  // Recording preferences entity.
  api.commons.org.RecordingPreferences recording_preferences = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateRecordingPreferences RPC.
message UpdateRecordingPreferencesResponse {}

//
// Customer Support preferences.
//

// Request for the GetAdminClientPreferences RPC.
message GetAdminClientPreferencesRequest {
  // Org ID.
  string org_id = 1;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 2;
}

// Response for the GetAdminClientPreferences RPC.
message GetAdminClientPreferencesResponse {
  // Admin client preferences entity.
  api.commons.org.AdminClientPreferences admin_client_preferences = 1;
}

// Request for the UpdateAdminClientPreferences RPC.
message UpdateAdminClientPreferencesRequest {
  // Org ID.
  string org_id = 1;

  // Admin client preferences entity.
  api.commons.org.AdminClientPreferences admin_client_preferences = 2;

  // Field mask for filtering each field.
  google.protobuf.FieldMask field_mask = 10;
}

// Response for the UpdateAdminClientPreferences RPC.
message UpdateAdminClientPreferencesResponse {}

//
// Miscellaneous APIs.
//

// Request for accepting linkback recording terms agreement.
message AcceptLinkbackRecordingTermsRequest {}

// Response for accepting linkback recording terms agreement.
message AcceptLinkbackRecordingTermsResponse {}

// Request for updating broadcast template 'Record' property.
message LinkbackUpdateBroadcastTemplatesRequest {
  // Broadcast linkback recording value.
  bool value = 1;
}

// Response for updating broadcast template 'Record' property.
message LinkbackUpdateBroadcastTemplatesResponse {}

// Request for recording email unsubscribe acknowledgement.
message RecordEmailUnsubscribeAcknowledgementRequest {}

// Response for recording email unsubscribe acknowledgement.
message RecordEmailUnsubscribeAcknowledgementResponse {}

// Request for clearing email unsubscribe acknowledgement.
message ClearEmailUnsubscribeAcknowledgementRequest {}

// Response for clearing email unsubscribe acknowledgement.
message ClearEmailUnsubscribeAcknowledgementResponse {}

// Request for persisting business hours.
message CreateBusinessHoursRequest {
  option deprecated = true;
  api.commons.org.BusinessHours business_hours = 1;
}

// Response for persisting business hours.
message CreateBusinessHoursResponse {
  option deprecated = true;
  string business_hours_id = 1;
}

// Request for updating business hours.
message UpdateBusinessHoursRequest {
  option deprecated = true;
  api.commons.org.BusinessHours business_hours = 1;
}

// Response for updating business hours.
message UpdateBusinessHoursResponse {
  option deprecated = true;
}

// Request for listing business hours.
message ListBusinessHoursRequest {
  option deprecated = true;
}

// Response for listing business hours.
message ListBusinessHoursResponse {
  option deprecated = true;
  reserved 1;
  reserved "business_hours_lists";
  // The list of business hours
  repeated api.commons.org.BusinessHours business_hours = 2;
}

// Request for fetching a business hours.
message GetBusinessHoursRequest {
  option deprecated = true;
  // The id of the business hours object
  string business_hours_id = 1;
}

// Response for fetching a business hours.
message GetBusinessHoursResponse {
  option deprecated = true;
  // The retrieved business hours
  api.commons.org.BusinessHours business_hours = 1;
}

// Request for initializing a business hours object
message SetBusinessHoursRequest {
  option deprecated = true;
  // The name of the business hours
  string business_hours_name = 1;
  // The description of the business hours
  string description = 2;
  // The list of day intervals for the business hours
  repeated api.commons.org.DayInterval day_intervals = 3;
  // The timezone of the business hours
  api.commons.TimeZone timezone = 4;
}

// Response for initializing a business hours object
message SetBusinessHoursResponse {
  option deprecated = true;
  // The id of the new business hours
  string business_hours_id = 1;
}

// Request for adding an interval to a business hours object
message AddIntervalToBusinessHoursRequest {
  option deprecated = true;
  // The id of the business hours to add an interval
  string business_hours_id = 1;
  // The day interval to be added
  api.commons.org.DayInterval day_interval = 2;
}

// Response for adding an interval to a business hours object
message AddIntervalToBusinessHoursResponse {
  option deprecated = true;
}

// Request for removing an interval from a business hours object
message RemoveIntervalFromBusinessHoursRequest {
  option deprecated = true;
  // The id of the business hours to remove an interval
  string business_hours_id = 1;
  // The day interval to be removed
  api.commons.org.DayInterval day_interval = 2;
}

// Response for removing an interval from a business hours object
message RemoveIntervalFromBusinessHoursResponse {
  option deprecated = true;
}

// Request for updating the business hours info
message UpdateBusinessHoursInfoRequest {
  option deprecated = true;
  // The id of the business hours object
  string business_hours_id = 1;
  // The updated name of the business hours
  string business_hours_name = 2;
  // The updated description of the business hours
  string description = 3;
  // The updated timezone of the business hours
  api.commons.TimeZone timezone = 4;
  // Field mask for the update request
  google.protobuf.FieldMask field_mask = 5;
}

// Response for updating the business hours info
message UpdateBusinessHoursInfoResponse {
  option deprecated = true;
}

// Request for deleting business hours.
message DeleteBusinessHoursRequest {
  option deprecated = true;
  // The id of the business hours object to be deleted
  string business_hours_id = 1;
}

// Response for deleting business hours.
message DeleteBusinessHoursResponse {
  option deprecated = true;
}

// Request for EvaluateBusinessHours
message EvaluateBusinessHoursRequest {
  option deprecated = true;
  // The id of the business hours to evaluate
  string business_hours_id = 1;
}

// Response for EvaluateBusinessHours
message EvaluateBusinessHoursResponse {
  option deprecated = true;
  // Resulting boolean if the current time is within
  // a day interval of a business hours object
  bool within_range = 1;
}
