syntax = "proto3";

package api.v1alpha1.org.skills;

import "annotations/authz.proto";
import "api/v1alpha1/org/skills/entities.proto";
import "google/api/annotations.proto";

service SkillsService {
  // CreateSkillGroup creates a new skill group.
  rpc CreateSkillGroup(CreateSkillGroupRequest) returns (CreateSkillGroupResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/createskillgroup";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ];
    };
  }

  // ListSkillGroups lists the skill groups belonging to an organization.
  rpc ListSkillGroups(ListSkillGroupsRequest) returns (ListSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/listskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        },
        {
          permissions: [PERMISSION_CHANGE_OWN_SKILL_GROUPS]
        }
      ];
    };
  }

  // UpdateSkillGroup updates a single skill group.
  rpc UpdateSkillGroup(UpdateSkillGroupRequest) returns (UpdateSkillGroupResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/updateskillgroup";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ];
    };
  }

  // GetSkillGroup gets a single skill group.
  rpc GetSkillGroup(GetSkillGroupRequest) returns (GetSkillGroupResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/getskillgroup";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        }
      ];
    };
  }

  // DeleteSkillGroup deletes a skill group.
  rpc DeleteSkillGroup(DeleteSkillGroupRequest) returns (DeleteSkillGroupResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/deleteskillgroup";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ];
    };
  }

  // RemoveSkillFromAllGroups removes a skill from all skill groups which contain it.
  rpc RemoveSkillFromAllGroups(RemoveSkillFromAllGroupsRequest) returns (RemoveSkillFromAllGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/removeskillfromallgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ];
    };
  }

  // AssignSkillGroups assigns a user to the given skill groups.
  rpc AssignSkillGroups(AssignSkillGroupsRequest) returns (AssignSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/assignskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_USER_EDIT]
        }
      ];
    };
  }

  // UpdateUsersOnSkillGroup updates a skill groups assigned users.
  rpc UpdateUsersOnSkillGroup(UpdateUsersOnSkillGroupRequest) returns (UpdateUsersOnSkillGroupResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/updateuseronskillgroup";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_EDIT]
        }
      ];
    };
  }

  // RevokeSkillGroups revokes the given skill groups from a user.
  rpc RevokeSkillGroups(RevokeSkillGroupsRequest) returns (RevokeSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/revokeskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_USER_EDIT]
        }
      ];
    };
  }

  // GetUserSkillGroups gets the skill groups assigned to a user.
  rpc GetUserSkillGroups(GetUserSkillGroupsRequest) returns (GetUserSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/getuserskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        }
      ];
    };
  }

  // GetUserSkills gets a user's skill proficiencies.
  rpc GetUserSkills(GetUserSkillsRequest) returns (GetUserSkillsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/getuserskills";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        }
      ];
    };
  }

  // GetSkillGroupMembers gets the members of a skill group.
  rpc GetSkillGroupMembers(GetSkillGroupMembersRequest) returns (GetSkillGroupMembersResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/getskillgroupmembers";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        }
      ];
    };
  }

  // ListSkillGroupsMembers gets the members of a skill group for each skill group in an Org.
  rpc ListSkillGroupsMembers(ListSkillGroupsMembersRequest) returns (ListSkillGroupsMembersResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/listskillgroupsmembers";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_ORG_VIEW]
        }
      ];
    };
  }

  // Gets the skills of the requesting agent. This includes agent skills, hunt group skills, and extension skills(PBX).
  // Skills will be returned as a value pair (name, level).
  // For agent skills, the name of each skill will be the agent_skill_sid.
  // All other skills' names (hunt group and PBX) will be given special formats.
  // The requesting agent and hunt_group_sid skills will be defaulted to the max level (1000 and 100 respectively).
  //
  // Required permissions:
  //   NONE
  // Errors:
  //   - grpc.Invalid: the hunt_group_sid in the request in invalid.
  rpc GetAgentSkills(GetAgentSkillsRequest) returns (GetAgentSkillsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/getagentskills";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }

  // Returns a list of skills for the current agent.
  rpc ListSkillsForCurrentAgent(ListSkillsForCurrentAgentRequest) returns (ListSkillsForCurrentAgentResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/listskillsforcurrentagent";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }

  // Returns a list of skills for the current user.
  rpc ListAssignedSkillGroups(ListAssignedSkillGroupsRequest) returns (ListAssignedSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/listassignedskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }

  // AssignOwnSkillGroups updates the current users skill groups
  rpc AssignOwnSkillGroups(AssignOwnSkillGroupsRequest) returns (AssignOwnSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/assignownskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_CHANGE_OWN_SKILL_GROUPS]
        }
      ];
    };
  }

  // RevokeOwnSkillGroups updates the current users skill groups
  rpc RevokeOwnSkillGroups(RevokeOwnSkillGroupsRequest) returns (RevokeOwnSkillGroupsResponse) {
    option (google.api.http).post = "/api/v1alpha1/skills/revokeownskillgroups";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_CHANGE_OWN_SKILL_GROUPS]
        }
      ];
    };
  }
}
