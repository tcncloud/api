syntax = "proto3";

package api.v1alpha1.insights;

import "annotations/authz.proto";
import "api/v1alpha1/insights/insight.proto";
import "google/api/annotations.proto";

service Insights {
  // CreateInsight creates a new insight
  rpc CreateInsight(CreateInsightRequest) returns (CreateInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/createinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        }
      ]
    };
  }

  // ListInsights lists insights
  rpc ListInsights(ListInsightsRequest) returns (ListInsightsResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/listinsights";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_DASHBOARDS_VIEW]
        },
        {
          permissions: [PERMISSION_DASHBOARDS_EDIT]
        }
      ]
    };
  }

  // ListOrgInsights lists insights for an org. Used for support app.
  rpc ListOrgInsights(ListOrgInsightsRequest) returns (ListOrgInsightsResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/listorginsights";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [
            PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN,
            PERMISSION_DASHBOARDS_VIEW
          ]
        }
      ]
    };
  }

  // UpdateInsight updates an existing insight
  rpc UpdateInsight(UpdateInsightRequest) returns (UpdateInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/updateinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        }
      ]
    };
  }

  // DeleteInsight deletes a insight
  rpc DeleteInsight(DeleteInsightRequest) returns (DeleteInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/deleteinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        }
      ]
    };
  }

  // GetInsight gets a insight by id
  rpc GetInsight(GetInsightRequest) returns (GetInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/getinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_DASHBOARDS_VIEW]
        },
        {
          permissions: [PERMISSION_DASHBOARDS_EDIT]
        }
      ]
    };
  }

  // CreateCommonsInsight is deprecated.
  rpc CreateCommonsInsight(CreateInsightRequest) returns (CreateInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/createcommonsinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [
            PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN,
            PERMISSION_INSIGHTS_INSIGHT_EDIT
          ]
        }
      ]
    };
  }

  // UpdateCommonsInsight is deprecated.
  rpc UpdateCommonsInsight(UpdateInsightRequest) returns (UpdateInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/updatecommonsinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [
            PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN,
            PERMISSION_INSIGHTS_INSIGHT_EDIT
          ]
        }
      ]
    };
  }

  // DeleteCommonsInsight is deprecated.
  rpc DeleteCommonsInsight(DeleteInsightRequest) returns (DeleteInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/deletecommonsinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [
            PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN,
            PERMISSION_INSIGHTS_INSIGHT_EDIT
          ]
        }
      ]
    };
  }

  // GetVfsSchema gets schema for a vfs
  rpc GetVfsSchema(GetVfsSchemaRequest) returns (GetVfsSchemaResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/getvfsschema";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        }
      ]
    };
  }

  // ListVfses lists exported vfs aliases
  rpc ListVfses(ListVfsesRequest) returns (ListVfsesResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/listvfses";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        }
      ]
    };
  }

  // ListVfses lists exported vfs aliases
  rpc ListVfsSchemas(ListVfsSchemasRequest) returns (ListVfsSchemasResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/listvfsschemas";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        },
        {
          permissions: [PERMISSION_INSIGHTS_INSIGHT_EDIT]
        },
        {
          permissions: [PERMISSION_DASHBOARDS_VIEW]
        }
      ]
    };
  }

  // PublishInsight publishes an insight
  rpc PublishInsight(PublishInsightRequest) returns (PublishInsightResponse) {
    option (google.api.http).post = "/api/v1alpha1/insights/insights/publishinsight";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [
            PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN,
            PERMISSION_INSIGHTS_INSIGHT_EDIT
          ]
        }
      ]
    };
  }
}
