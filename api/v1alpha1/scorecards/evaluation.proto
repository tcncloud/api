syntax = "proto3";

package api.v1alpha1.scorecards;

import "api/commons/scorecards.proto";
import "google/protobuf/field_mask.proto";

// CreateEvaluationRequest is request to create a new evaluation
message CreateEvaluationRequest {
  api.commons.Evaluation evaluation = 1; // entity to create
}

// CreateEvaluationResponse is response with created entity
message CreateEvaluationResponse {
  api.commons.Evaluation evaluation = 1; // entity created
}

message UpdateEvaluationRequest {
  api.commons.Evaluation evaluation = 1; // Required - evaluation that is to be updated
  google.protobuf.FieldMask update_mask = 2; // Required - specification of which fields should be updated
}

message UpdateEvaluationResponse {
  api.commons.Evaluation evaluation = 1;
}

// DeleteEvaluationRequest is request to delete an evaluation
message DeleteEvaluationRequest {
  int64 evaluation_id = 2; // Required - unique id of evaluation to get
}

// DeleteEvaluationReponse is response with requested entity
message DeleteEvaluationResponse {
  api.commons.Evaluation evaluation = 1; // entity deleted
}

// GetEvaluationRequest is request to get an evaluation
message GetEvaluationRequest {
  int64 evaluation_id = 2; // Required - unique id of evaluation to get
}

// GetEvaluationReponse is response with requested entity
message GetEvaluationResponse {
  api.commons.Evaluation evaluation = 1;
}

// ScoreEvaluationRequest is request to score an evaluation
message ScoreEvaluationRequest {
  int64 evaluation_id = 3; // Required - unique id of evaluation to score
}

// ScoreEvaluationResponse returns the evaluation that was scored
message ScoreEvaluationResponse {
  api.commons.Evaluation evaluation = 1;
}

// ListEvaluationsRequest is request to get list of evaluations
message ListEvaluationsRequest {
  repeated string scorer_id = 2; // optional, list by scorer_id
  api.commons.TimeFilter completed_at = 3; // optional, filter completed_at by a specific range
  repeated int64 category_ids = 4; // optional, list by category_ids
  repeated string agent_user_ids = 5; // Optional. List by agent user ids.
  repeated int64 scorecard_ids = 6; // Optional. List by scorecard_ids

  // Optional. Fields to return. Defaults to all evaluation fields (no sub entities).
  //
  // Example selecting score, section points, and question answers:
  // {
  //   paths: [
  //     "score",
  //     "evaluation_section.points",
  //     "evaluation_section.evaluation_question.answers"
  //   ]
  // }
  google.protobuf.FieldMask return_fields = 10;
  bool is_deleted = 11; // Optional. If true, will only show deleted evaluations.
}

// ListEvaluationsResponse returns a list of evaluations
message ListEvaluationsResponse {
  repeated api.commons.Evaluation evaluations = 1;
}

message PreviewEvaluationScoreRequest {
  api.commons.Evaluation evaluation = 2; // Required - evaluation to preview score of
  api.commons.Scorecard scorecard = 3; // Required - scorecard the evaluation belongs too
}

message PreviewEvaluationScoreResponse {
  api.commons.Evaluation evaluation = 1; // preview of scored evaluation
}

// [CUSTOMER SUPPORT ONLY] ================================

// ListEvaluationsByOrgIdRequest is request to get list of evaluations
message ListEvaluationsByOrgIdRequest {
  string org_id = 1; // Required. Specifies the org id to filter evaluations by.
  repeated string scorer_id = 2; // optional, list by scorer_id
  api.commons.TimeFilter completed_at = 3; // optional, filter completed_at by a specific range
  repeated int64 category_ids = 4; // optional, list by category_ids
  repeated string agent_user_ids = 5; // Optional. List by agent user ids.
  repeated int64 scorecard_ids = 6; // Optional. List by scorecard_ids

  // Optional. Fields to return. Defaults to all evaluation fields (no sub entities).
  //
  // Example selecting score, section points, and question answers:
  // {
  //   paths: [
  //     "score",
  //     "evaluation_section.points",
  //     "evaluation_section.evaluation_question.answers"
  //   ]
  // }
  google.protobuf.FieldMask return_fields = 10;
}

// DeleteEvaluationByOrgIdRequest is request to delete an evaluation
message DeleteEvaluationByOrgIdRequest {
  string org_id = 1; // Required. Specifies the org in which to delete the evaluation.
  int64 evaluation_id = 2; // Required - unique id of evaluation to get
}

// BulkDeleteEvaluationsRequest is a request to delete evaluations
message BulkDeleteEvaluationsRequest {
  string org_id = 1; // Required. Specifies the org in which to delete the evaluation.
  repeated int64 evaluation_ids = 2; // Optional. Unique ids of evaluations to delete.
  api.commons.TimeFilter completed_at = 3; // Optional. Delete evaluations in a specific range.
}

// BulkDeleteEvaluationsResponse is a response with deleted evaluations
message BulkDeleteEvaluationsResponse {
  repeated int64 evaluation_ids = 1; // List of ids for deleted evaluations.
}

// RestoreEvaluationRequest is request to restore a deleted evaluation
message RestoreEvaluationRequest {
  int64 evaluation_id = 2; // Required - unique id of evaluation to restore
  string user_id = 3; // tcn user id of person performing request
}

// RestoreEvaluationReponse contains the restored evaluation
message RestoreEvaluationResponse {
  api.commons.Evaluation evaluation = 1; // restored evaluation
}
