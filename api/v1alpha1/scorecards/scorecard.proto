syntax = "proto3";

package api.v1alpha1.scorecards;

import "api/commons/acd.proto";
import "api/commons/scorecards.proto";
import "google/protobuf/field_mask.proto";

// CreateScorecardRequest is the request to create a scorecard.
message CreateScorecardRequest {
  api.commons.Scorecard scorecard = 1;
}

// CreateScorecardResponse contains the scorecard that was created.
message CreateScorecardResponse {
  api.commons.Scorecard scorecard = 1;
}

// ListScorecardsRequest is the request for listing scorecards by certain criteria.
message ListScorecardsRequest {
  repeated string author_ids = 2; // Optional. Results include any of the authors
  repeated int64 category_ids = 3; // Optional. Results include any of the categories listed.
  repeated api.commons.ScorecardState states = 4; // Optional. Results include scorecard in any of the given states.
  repeated api.commons.EvaluationType evaluation_types = 5; // Optional. Results include scorecard with any of the given types
  repeated api.commons.CallType.Enum call_types = 6; // Optional. Results include scorecard with any of the given call types.

  // TODO: Spec out the phrase/keyword option(s)
}

// ListScorecardsResponse includes a list of scorecards.
message ListScorecardsResponse {
  repeated api.commons.Scorecard scorecards = 1;
}

// UpdateScorecardRequest is the request for updating a scorecard.
message UpdateScorecardRequest {
  // Required.
  api.commons.Scorecard scorecard = 1;

  // Required. Valid paths: [title, description, pass_score, score_type,
  // evaluation_type, allow_feedback, distribute_weights, category.category_id].
  // To update Sections, use *Section and *ScorecardQuestion methods.
  google.protobuf.FieldMask update_mask = 2;
}

// UpdateScorecardResponse returns the updated scorecard.
message UpdateScorecardResponse {
  api.commons.Scorecard scorecard = 1;
}

// DeleteScorecardRequest is the request to delete a scorecard.
message DeleteScorecardRequest {
  int64 scorecard_id = 2; // Required.
}

// DeleteScorecardResponse contains the deleted scorecard.
message DeleteScorecardResponse {
  api.commons.Scorecard scorecard = 1;
}

// GetScorecardRequest is the request for getting a scorecard.
message GetScorecardRequest {
  int64 scorecard_id = 2; // Required.
  bool use_default = 3; // if true, will ignore id and return default
}

// GetScorecardResponse contains a scorecard.
message GetScorecardResponse {
  api.commons.Scorecard scorecard = 1;
}
