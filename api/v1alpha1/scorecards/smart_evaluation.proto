syntax = "proto3";

package api.v1alpha1.scorecards;

import "api/commons/scorecards.proto";
import "google/protobuf/field_mask.proto";

// CreateSmartEvaluationRequest represents a request to create a smart evaluation.
message CreateSmartEvaluationRequest {
  api.commons.SmartEvaluation smart_evaluation = 1;
}

// CreateSmartEvaluationResponse represents a response to create a smart evaluation.
message CreateSmartEvaluationResponse {
  api.commons.SmartEvaluation smart_evaluation = 1;
}

// ListSmartEvaluationsRequest represents a request to list smart evaluations.
message ListSmartEvaluationsRequest {
  // Optional. The order by which smart evaluations will be listed. Follows sql
  // order by syntax. Defaults to "complete_time desc, smart_evaluation_id desc".
  string order_by = 2;

  // Optional - number of smart evaluations included in response. Defaults to 500.
  int32 page_size = 3;

  // Optional. The next_page_token returned from a previous List request, if any.
  string page_token = 4;

  // Required. Fields to return.
  //
  // Example selecting score, section points, and question answer:
  // {
  //   paths: [
  //     "score",
  //     "smart_evaluation_section.points",
  //     "smart_evaluation_section.smart_evaluation_question.answer"
  //   ]
  // }
  google.protobuf.FieldMask return_fields = 5;

  /*
     Optional. The standard list filter as described in https://google.aip.dev/160.
     Multiple comparisons can be provided when separated with a logical AND
     operator. Supported fields, operators and functions are listed below.

     +----------------------------+-----------+-----------------+-----------+
     |                      field |      type |       operators | functions |
     +----------------------------+-----------+-----------------+-----------+
     |               scorecard_id |   integer |               = |       any |
     |                category_id |   integer |               = |       any |
     |              agent_user_id |    string |               = |       any |
     |             transcript_sid |   integer | =, >=, <=, >, < |           |
     |              complete_time | timestamp | =, >=, <=, >, < |           |
     +----------------------------+-----------+-----------------+-----------+

     Examples:
       transcript_sid >= 1

       scorecard_id = 0 AND
       agent_user_id = any("00000000-0000-0000-0000-000000000000", "00000000-0000-0000-0000-000000000001") AND
       complete_time >= '2012-04-21T11:30:00-04:00'
  */
  string filter = 6;
}

// ListSmartEvaluationsResponse represents a response to list smart evaluations.
message ListSmartEvaluationsResponse {
  repeated api.commons.SmartEvaluation smart_evaluations = 1;
  // Token to retrieve the next page, or empty if there are no
  // more entries in the list.
  string next_page_token = 2;
}

// UpdateSmartEvaluationRequest represents a request to update a smart evaluation.
message UpdateSmartEvaluationRequest {
  api.commons.SmartEvaluation smart_evaluation = 1; // Required - the smart evaluation  to update.
  google.protobuf.FieldMask update_mask = 2; // Required - specification of which fields should be updated.
}

// UpdateSmartEvaluationResponse represents a response to update a smart evaluation.
message UpdateSmartEvaluationResponse {
  api.commons.SmartEvaluation smart_evaluation = 1;
}

// DeleteSmartEvaluationRequest represents a request to delete a smart evaluation.
message DeleteSmartEvaluationRequest {
  int64 smart_evaluation_id = 2;
}

// DeleteSmartEvaluationResponse represents a response to delete a smart evaluation.
message DeleteSmartEvaluationResponse {}

// GetSmartEvaluationRequest represents a request to get a smart evaluation.
message GetSmartEvaluationRequest {
  int64 smart_evaluation_id = 2;
}

// GetSmartEvaluationResponse represents a response to get a smart evaluation.
message GetSmartEvaluationResponse {
  api.commons.SmartEvaluation smart_evaluation = 1;
}
