syntax = "proto3";

package api.v1alpha1.bireportgenerator;

import "annotations/authz.proto";
import "api/commons/bireportgenerator.proto";
import "api/v1alpha1/bireportgenerator/entities.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// BIReportGeneratorService is the service for generating BI reports.
service BIReportGeneratorService {
  // CreateReportJob creates a new report job.
  rpc CreateReportJob(CreateReportJobRequest) returns (CreateReportJobResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/createreportjob";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  // ListReportJobs lists report jobs.
  rpc ListReportJobs(ListReportJobsRequest) returns (ListReportJobsResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/listreportjobs";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  // UpdateReportJob updates a report job.
  rpc UpdateReportJob(UpdateReportJobRequest) returns (UpdateReportJobResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/updatereportjob";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  // DeleteReportJob deletes a report job.
  rpc DeleteReportJob(DeleteReportJobRequest) returns (DeleteReportJobResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/deletereportjob";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  // GetReportJob gets a report job.
  rpc GetReportJob(GetReportJobRequest) returns (GetReportJobResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/getreportjob";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  rpc GenerateReport(GenerateReportRequest) returns (GenerateReportResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/generatereport";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
  // ListReportLogsStream lists report logs with streaming
  rpc ListReportLogsStream(ListReportLogsStreamRequest) returns (stream ListReportLogsStreamResponse) {
    option (google.api.http).post = "/api/v1alpha1/reportgenerator/reportgenerator/listreportlogsstream";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_REPORT_GENERATOR_EDIT]
        }
      ]
    };
  }
}

// CreateReportJobRequest is the request for creating a report job.
message CreateReportJobRequest {
  // The report job to create.
  ReportJob report_job = 1;
}

// CreateReportJobResponse is the response for creating a report job.
message CreateReportJobResponse {
  // The created report job.
  ReportJob report_job = 1;
}

// ListReportJobsRequest is the request for listing report jobs.
message ListReportJobsRequest {}

// ListReportJobsResponse is the response for listing report jobs.
message ListReportJobsResponse {
  // The report jobs.
  repeated ReportJob report_jobs = 1;
}

// UpdateReportJobRequest is the request for updating a report job.
message UpdateReportJobRequest {
  // The report job to update.
  ReportJob report_job = 1;

  // The fields to update.
  google.protobuf.FieldMask update_mask = 2;
}

// UpdateReportJobResponse is the response for updating a report job.
message UpdateReportJobResponse {
  // The updated report job.
  ReportJob report_job = 1;
}

// DeleteReportJobRequest is the request for deleting a report job.
message DeleteReportJobRequest {
  // id of the report job to delete.
  string report_job_id = 1;
}

// DeleteReportJobResponse is the response for deleting a report job.
message DeleteReportJobResponse {}

// GetReportJobRequest is the request for getting a report job.
message GetReportJobRequest {
  // id of the report job to get.
  string report_job_id = 1;
}

// GetReportJobResponse is the response for getting a report job.
message GetReportJobResponse {
  // The report job.
  ReportJob report_job = 1;
}

// GenerateReportRequest is the request for generating a report.
message GenerateReportRequest {
  // The report job to generate the report for.
  ReportJob report_job = 1;
  // When to send the report as
  google.protobuf.Timestamp send_as_of_date = 2;
}

// GenerateReportResponse is the response for generating a report.
message GenerateReportResponse {}

// ListReportLogsStreamRequest is the request for listing report logs with streaming
message ListReportLogsStreamRequest {
  // the start time window to list report logs
  google.protobuf.Timestamp start_time = 1;
  // the end time window to list report logs
  google.protobuf.Timestamp end_time = 2;
}

// ListReportLogsStreamResponse is the response for listing report logs with streaming
message ListReportLogsStreamResponse {
  // report_log describes a report log
  ReportLog report_log = 1;
}
