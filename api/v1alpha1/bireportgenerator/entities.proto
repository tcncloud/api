syntax = "proto3";

package api.v1alpha1.bireportgenerator;

import "api/commons/bireportgenerator.proto";
import "api/commons/enums.proto";
import "api/commons/org.proto";
import "api/commons/types.proto";
import "google/protobuf/timestamp.proto";

// ReportJob that can be scheduled to report dashboard data.
message ReportJob {
  // unique identifier for the report job
  string report_job_id = 1;
  // name of the report job
  string name = 2;
  // description of the report job
  string description = 3;
  // dashboard id to report
  string dashboard_id = 4 [deprecated = true];
  // time zone to use for the report schedule
  string time_zone = 5 [deprecated = true];
  // time period of data to report with
  commons.TimePeriod time_period = 6;
  // delivery times for the report
  commons.DeliveryTimes delivery_times = 7 [deprecated = true];
  // days filter to report on
  commons.DayFilter day_filter = 8 [deprecated = true];
  // months filter to report on
  repeated commons.Month months = 9 [deprecated = true];
  // format options for the report
  commons.FormatOptions format_options = 10 [deprecated = true];
  // delivery options for the report
  commons.DeliveryOptions delivery_options = 11 [deprecated = true];
  // whether the report job is active
  bool is_active = 12;
  // whether to send an empty report if no data is available
  bool send_empty_report = 13;
  // dashboard resource id to report
  string dashboard_resource_id = 14;
  // time_zone_wrapper to use for the report schedule
  commons.TimeZoneWrapper time_zone_wrapper = 15;
  // hide csv footer
  bool hide_csv_footer = 16;
  // transfer_config_sid to use for the report delivery
  int64 transfer_config_sid = 17 [deprecated = true];
  // cron expression for the report schedule
  commons.CronExpression cron_expression = 18;
  // transfer_options are options used for the report delivery
  commons.TransferOptions transfer_options = 19;
}

// ReportLog describes information on a report log
message ReportLog {
  // org id of the report log
  string org_id = 1;
  // report log id
  int64 report_log_id = 2;
  // report job id
  int64 report_job_id = 3 [jstype = JS_STRING];
  // unique id of the job execution
  string execution_id = 4;
  // name of the report
  string report_name = 5;
  // the time that the report job was requested
  google.protobuf.Timestamp job_requested_time = 6;
  // the time that the report job was completed
  google.protobuf.Timestamp job_completed_time = 7;
  // result of the report job
  bool success = 8;
  // describes the error that last occurred for the job, if any
  string failure_reason = 9;
  // current attempt number of the report job
  int64 attempt_number = 10;
  // max attempts of the report job
  int64 max_attempts = 11;
  // create time of the report log
  google.protobuf.Timestamp create_time = 12;
  // update time of the report log
  google.protobuf.Timestamp update_time = 13;
}
