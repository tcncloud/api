syntax = "proto3";

package api.v1alpha1.agenttraining;

import "annotations/authz.proto";
import "api/v1alpha1/agenttraining/learning_opportunity.proto";
import "google/api/annotations.proto";

service AgentTrainingService {
  // CreateLearningOpportunity creates a new learning opportunity.
  rpc CreateLearningOpportunity(CreateLearningOpportunityRequest) returns (CreateLearningOpportunityResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/createlearningopportunity";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SCORECARDS_MANAGE]
        }
      ];
    };
  }

  // ListLearningOpportunities lists learning opportunities.
  rpc ListLearningOpportunities(ListLearningOpportunitiesRequest) returns (ListLearningOpportunitiesResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/listlearningopportunities";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SCORECARDS_MANAGE]
        }
      ];
    };
  }

  // ListAgentLearningOpportunities lists learning opportunities by agent.
  rpc ListAgentLearningOpportunities(ListAgentLearningOpportunitiesRequest) returns (ListAgentLearningOpportunitiesResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/listagentlearningopportunities";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_AGENT_PORTALS_VIEW]
        }
      ];
    };
  }

  // UpdateLearningOpportunity updates a learning opportunity.
  rpc UpdateLearningOpportunity(UpdateLearningOpportunityRequest) returns (UpdateLearningOpportunityResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/updatelearningopportunity";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SCORECARDS_MANAGE]
        }
      ];
    };
  }

  // DeleteLearningOpportunity deletes a learning opportunity.
  rpc DeleteLearningOpportunity(DeleteLearningOpportunityRequest) returns (DeleteLearningOpportunityResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/deletelearningopportunity";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SCORECARDS_MANAGE]
        }
      ];
    };
  }

  // GetLearningOpportunity gets a learning opportunity.
  rpc GetLearningOpportunity(GetLearningOpportunityRequest) returns (GetLearningOpportunityResponse) {
    option (google.api.http).post = "/api/v1alpha1/agenttraining/agenttrainingservice/getlearningopportunity";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SCORECARDS_MANAGE]
        }
      ];
    };
  }
}
