syntax = "proto3";

package api.v1alpha1.tickets;

import "api/commons/tickets.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

message PingReq {}
message PingRes {}

// CreateTicketReq - Request for CreateTicket
message CreateTicketReq {
  // title of the ticket to be created.
  string title = 1;

  // description of the ticket
  string description = 2;

  // the enabled project sid. project must have been enabled/imported from omni.project.project_sid to tickets_db.ticket_project.project_sid
  int64 project_sid = 3 [jstype = JS_STRING];

  // ticket due date
  google.protobuf.Timestamp due_date = 8;
  // A list of conversation context meatadatgit stata
  repeated api.commons.Metadata metadata = 9;
  // A list of skills assotiated with a ticket
  repeated api.commons.Skills ticket_skills = 10 [deprecated = true];
  // Status - Ticket status : 1 open, 2 doing, 3 close etc
  int64 status = 11;
  // A list of sla assotiated with a ticket
  repeated api.commons.Sla ticket_sla = 12;
  bool assign_self = 13;
  string assign_other = 14 [deprecated = true];
  repeated api.commons.TicketAction ticket_action = 15;
  // assignee list
  repeated string ticket_assignee = 16;
}

//
message CreateTicketTemplateRequest {
  api.commons.TicketTemplate ticket_template = 1;
}

message CreateTicketTemplateResponse {
  api.commons.TicketTemplate ticket_template = 1;
}

message EditTicketTemplateRequest {
  int64 ticket_template_id = 1 [jstype = JS_STRING];
  api.commons.TicketTemplate edit_value = 2;
  google.protobuf.FieldMask edited_fields_mask = 3;
}

message EditTicketTemplateResponse {
  bool is_edited = 1 [deprecated = true];
}

message ListTicketTemplateRequest {
  int64 ticket_template_id = 1 [deprecated = true];
  int64 project_id = 2 [deprecated = true];
  // List values based on TemplateId OR ProjectId. If no mask is sent, return all template's based on ORG Id
  google.protobuf.FieldMask request_mask = 3;
  int64 template_id = 4 [jstype = JS_STRING];
  int64 template_project_id = 5 [jstype = JS_STRING];
}

message ListTicketTemplateResponse {
  repeated api.commons.ListTemplate enabled_templates = 1 [deprecated = true];
  repeated api.commons.TicketProjectTemplate ticket_project_template = 2;
}

// AssignProjectTemplate
message AssignProjectTemplateRequest {
  api.commons.AssignProjectTemplate project_template = 1 [deprecated = true];
  int64 project_id = 2 [jstype = JS_STRING];
  repeated api.commons.TemplateDescription template_description = 3;
}

message AssignProjectTemplateResponse {
  bool is_assigned = 1 [deprecated = true];
}

// CreateTicketRes - Response from CreateTicket BE API
message CreateTicketRes {
  // Returns the created ticket row in the response
  api.commons.Ticket ticket = 1;
}

// Request all the Action Types
message GetActionTypeRequest {}

// Returns all the Action Types
message GetActionTypeResponse {
  repeated api.commons.ActionType action_type = 1;
}

// Reqiest For Phone Number Validation - Mobile/Other/Invalid
message GetPhoneNumberTypeRequest {
  option deprecated = true;
  string phone_number = 1;
}

message GetPhoneNumberTypeResponse {
  option deprecated = true;
  api.commons.PhoneNumberType phone_type = 1;
}

// EditTicketReq - Request for EditTicketReq
message EditTicketReq {
  // Message deprecated as Mask is used for Editing Ticket & Actions
  option deprecated = true;
  int64 ticket_sid = 1 [jstype = JS_STRING];
  // The comment text
  api.commons.EditAttribute edit_value = 2;
}

// EditMaskTicketReq - Request for EditMaskTicket
// EditTicketReq would be deprecated
message EditMaskTicketReq {
  // Ticket Id
  int64 ticket_sid = 1 [
    jstype = JS_STRING,
    deprecated = true
  ];
  // Ticket Object
  api.commons.Ticket edit_value = 2;
  // Field to be edited in DB
  repeated google.protobuf.FieldMask edited_fields_mask = 3;
  // ticket_code
  string ticket_code = 4;
}

// EditMaskTicketRes - Response for EditMaskTicketReq
// EditTicketRes would be deprecated
message EditMaskTicketRes {
  bool is_edited = 1 [deprecated = true];
}

// ListAllocatedTicketRes -
message ListAllocatedTicketRes {
  option deprecated = true;
  repeated int64 ticket_sid = 1 [jstype = JS_STRING];
}

// ListAllocatedTicketReq -
message ListAllocatedTicketReq {
  option deprecated = true;
}

// ListAgentTicketsResponse -
message ListAgentTicketsResponse {
  repeated api.commons.Ticket ticket = 1;
}

// ListAgentTicketsRequest -
message ListAgentTicketsRequest {
  google.protobuf.FieldMask select_field_mask = 1; //defines the ticket fields to be returned
  google.protobuf.FieldMask filter_mask = 2; //defines the search by field
}

// ListAvailableAgentTicketsResponse -
message ListAvailableAgentTicketsResponse {
  repeated int64 ticket_sid = 1 [
    jstype = JS_STRING,
    deprecated = true
  ];
  repeated api.commons.Ticket ticket = 2;
}

// ListAvailableAgentTicketsRequest -
message ListAvailableAgentTicketsRequest {
  google.protobuf.FieldMask select_field_mask = 1; //defines the ticket fields to be returned
  AvailableTicketsFilter available_filter = 2;
  int64 agent_view_limit = 3; //agent profile setting
}

// AvailableTicketsFilter
message AvailableTicketsFilter {
  repeated string agent_skill_id = 1; //list of agent's skills
}

// EditTicketRes - Response for EditTicketReq
message EditTicketRes {
  option deprecated = true;
  bool is_edited = 1;
}

// ListTicketsReq
message ListTicketsReq {}

message ListTicketsRes {
  repeated api.commons.Ticket tickets = 1;
}

// AssignTicketReq
message AssignTicketReq {
  option deprecated = true;
  int64 ticket_sid = 1 [jstype = JS_STRING];
  string assignee_list = 2;
  string assigned_id = 3;
}

// AssignTicketRes
message AssignTicketRes {
  option deprecated = true;
  int64 ticket_sid = 1 [jstype = JS_STRING];
  string assignee_list = 2;
  string assigned_id = 3;
}

// ViewTicketReq -
message ViewTicketReq {
  int64 ticket_sid = 1 [
    jstype = JS_STRING,
    deprecated = true
  ];
  // ticket_code
  string ticket_code = 2;
}

// ViewTicketRes -
message ViewTicketRes {
  api.commons.Ticket ticket = 1; // ticket details
  repeated api.commons.Comment comments = 2; // comments
  repeated api.commons.ReplyComment reply_comment = 3;
}

// Create CommentReq  - Create Comment Request From Client
message CreateCommentReq {
  // ticket Id of the comment to be created.

  int64 ticket_sid = 1 [
    jstype = JS_STRING,
    deprecated = true
  ];

  // description of the comment
  string comment = 2;
  // ticket_code
  string ticket_code = 3;
}

// CreateCommenttRes - Response from CreateComment BE API
message CreateCommentRes {
  // Returns the created comment row in the response
  api.commons.Comment comment = 1;
}

// CloseTicketReq - Close Ticket Request Messages
message CloseTicketReq {
  // ticket Id of the ticket which needs to be closed
  int64 ticket_sid = 1 [
    jstype = JS_STRING,
    deprecated = true
  ];
  // description of the comment
  string comment = 2;
  // from status of the ticket
  int64 from_status = 3 [
    jstype = JS_STRING,
    deprecated = true
  ];
  // ticket_code
  string ticket_code = 4;
}

// CloseTicketRes - Close Ticket Response Messages
message CloseTicketRes {
  bool is_status = 1 [deprecated = true];
}

// Create CreateSlaReq  - Create Sla Request From Client
message CreateSlaReq {
  // sla_sid of the sla to be created.
  int64 sla_sid = 1 [jstype = JS_STRING];
  // name of the sla
  string name = 2;
  // description of the sla
  string description = 3;
  // sla interval
  int64 interval = 4 [deprecated = true];
  // SLA Duration
  api.commons.Duration duration = 5;
}

// CreateSlaRes - Response from CreateSla BE API
message CreateSlaRes {
  // Returns the created sla row in the response
  api.commons.TicketSla sla = 1;
}

// ListSlaReq -
message ListSlaReq {}

// ListSlaRes -
message ListSlaRes {
  repeated api.commons.TicketSla ticketsSla = 1;
}

// UpdateSlaReq -
message UpdateSlaReq {
  // sla_sid of the sla to be created.
  int64 sla_sid = 1 [jstype = JS_STRING];
  // sla is_active
  int64 is_active = 2;
}

// ListSlaRes -
message UpdateSlaRes {
  api.commons.TicketSla ticketsSla = 1;
}

// ListSlaConditionReq -
message ListSlaConditionReq {}

// ListSlaConditionRes -
message ListSlaConditionRes {
  repeated api.commons.SlaConditions slaCondition = 1;
}

// ReplyCommentReq - Reply Comment Request Messages
message ReplyCommentReq {
  // The snowflake id of a comment row in ticket_comment.
  int64 comment_sid = 1 [jstype = JS_STRING];
  // The ticket reference where the comment was added.
  int64 ticket_sid = 2 [
    jstype = JS_STRING,
    deprecated = true
  ];
  // The comment text
  string reply = 3;
  // commenter by id
  string created_by_id = 4; // used in creating comment
  // ticket_code
  string ticket_code = 5;
}

// ReplyCommentRes - Reply Comment Response Messages
message ReplyCommentRes {
  // Returns boolen true OR False in the response
  api.commons.ConfirmReplyComment is_created = 1;
}

// CreateSelfAssignReq -
message CreateSelfAssignReq {
  option deprecated = true;
  int64 ticket_sid = 1 [jstype = JS_STRING];
}

// CreateSelfAssignRes -
message CreateSelfAssignRes {
  option deprecated = true;
  bool is_assigned = 1;
}

// ListSkillsRequest - request message
message ListSkillsRequest {}

// ListSkillsResponse - response message wraps p3 skills Id and name
message ListSkillsResponse {
  repeated Skill skills = 1;
}
message Skill {
  string skill_id = 1;
  string name = 2;
}

// ListUsersRequest - Users request message
message ListUsersRequest {}

// ListUsersResponse - response wraps userId, first_name, last_name
message ListUsersResponse {
  repeated User users = 1;
}
message User {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  bool is_active = 4;
}
message CreateTicketActionRequest {
  api.commons.TicketAction ticket_action = 1;
}

message CreateTicketActionResponse {
  api.commons.TicketAction ticket_action = 1;
}
message CloseTicketActionRequest {
  int64 ticket_action_id = 1 [jstype = JS_STRING];
  int64 ticket_id = 2 [
    jstype = JS_STRING,
    deprecated = true
  ];
  string comment = 3 [deprecated = true];
  // ticket_code
  string ticket_code = 4;
}

message CloseTicketActionResponse {
  bool is_closed = 1 [deprecated = true];
}

message AssignTicketActionRequest {
  option deprecated = true;
  int64 ticket_action_id = 1 [jstype = JS_STRING];
}

message AssignTicketActionResponse {
  option deprecated = true;
  bool is_assigned = 1;
}

message ChangeTicketStatusRequest {
  option deprecated = true;
  int64 ticket_id = 1 [jstype = JS_STRING];
  int64 status_id = 2 [jstype = JS_STRING];
  api.commons.TicketStatus ticket_status = 3;
}
message ChangeTicketStatusResponse {
  option deprecated = true;
  bool is_status_edited = 1;
}

message AddEntityRefRequest {
  EntityRef entity_ref = 1; //be able to assign entity ref to a ticket
}

message AddEntityRefResponse {}

message ListEntityRefsByTicketRequest {
  string ticket_code = 1;
}

message ListEntityRefsByTicketResponse {
  repeated EntityRef entity_ref = 1;
}

message ListTicketsByEntityRefRequest {
  string uri = 1; //uri that uniquely identifies any entity associated with a ticket
}

message ListTicketsByEntityRefResponse {
  repeated api.commons.Ticket tickets = 1;
}

//should this be in a separate folder / file
message EntityRef {
  string org_id = 1;
  string region_id = 2;
  string ticket_code = 3;
  string uri = 4;
}
