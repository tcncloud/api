syntax = "proto3";

package api.v1alpha1.explorer;

import "annotations/authz.proto";
import "api/commons/bireportgenerator.proto";
import "api/v1alpha1/explorer/entities.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// ExplorerService is the service for the explorer API.
service ExplorerService {
  // ListDatasourceSchemas lists all accessible datasources and their schemas.
  rpc ListDatasourceSchemas(ListDatasourceSchemasRequest) returns (ListDatasourceSchemasResponse) {
    option (google.api.http).post = "/api/v1alpha1/explorer/explorer/listdatasourceschemas";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }
  // Query queries a datasource.
  rpc Query(QueryRequest) returns (QueryResponse) {
    option (google.api.http).post = "/api/v1alpha1/explorer/explorer/query";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }

  rpc GetSupportQuery(SupportQueryRequest) returns (SupportQueryResponse) {
    option (google.api.http).post = "/api/v1alpha1/explorer/explorer/getsupportquery";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN]
        }
      ]
    };
  }

  rpc GetQueryExplain(QueryExplainRequest) returns (QueryExplainResponse) {
    option (google.api.http).post = "/api/v1alpha1/explorer/explorer/getqueryexplain";
    option (google.api.http).body = "*";
    option (annotations.authz) = {
      sets: [
        {
          permissions: [PERMISSION_CUSTOMER_SUPPORT]
        }
      ]
    };
  }

  // GetWeeksOfData returns the number of weeks of data an org is limited to and the cutoff date.
  rpc GetWeeksOfData(GetWeeksOfDataRequest) returns (GetWeeksOfDataResponse) {
    option (google.api.http).post = "/api/v1alpha1/explorer/explorer/getweeksofdata";
    option (google.api.http).body = "*";
    option (annotations.authz) = {no_permissions: true};
  }
}

// GetWeeksOfDataRequest is the request to get the number of weeks of data.
message GetWeeksOfDataRequest {
  // org_id to retrieve value for
  string org_id = 1;
}

// GetWeeksOfDataResponse contains the number of weeks of data.
message GetWeeksOfDataResponse {
  // number of weeks of data
  int32 weeks_of_data = 1;
  // access_start_date is the start date of the data
  google.protobuf.Timestamp access_start_date = 2;
}

// ListDatasourceSchemasRequest is the request to list datasource schemas.
message ListDatasourceSchemasRequest {
  // datasource_names is a table name filter for the datasources to list.
  repeated string datasource_names = 1;
  // datasource_type is the type of the datasource to list.
  // If not specified, all datasources will be listed.
  api.v1alpha1.explorer.DatasourceType datasource_type = 2;
}

// ListDatasourceSchemasResponse contains datasources and their schemas.
message ListDatasourceSchemasResponse {
  // list of schemas
  repeated api.v1alpha1.explorer.Schema schemas = 1;
}

// QueryRequest is the request to query a datasource.
message QueryRequest {
  // datasource_name is the name of the datasource to query.
  string datasource_name = 1;
  // datasource_type is the type of the datasource to query.
  api.v1alpha1.explorer.DatasourceType datasource_type = 2;
  // query is the query to execute.
  oneof query {
    // pipeline to be compiled to prql
    string pipeline = 3;
    // prql query to execute
    string prql = 4;
  }
  // org_id for ownership of the data
  repeated string org_ids = 5;
  // start_time is the start time of the query.
  google.protobuf.Timestamp start_time = 6;
  // end_time is the end time of the query.
  google.protobuf.Timestamp end_time = 7;
  // timezone is IESG timezone name
  // this is how the timezone is represented in the query
  string timezone = 8;
  // pipeline_parameters is the parameters for the pipeline.
  api.v1alpha1.explorer.Parameters pipeline_parameters = 9;
  // ui_trace_id is the trace id of the query.
  string ui_trace_id = 10;
  // comment is the comment for the query.
  string comment = 11;
  // format is the format of the result.
  api.v1alpha1.explorer.ExportFormat format = 12;
  // time period quick filter
  // if time period is used, cannot use start_time and end_time
  api.commons.TimePeriod time_period = 13;
  // report_date is to seed the time period for, if empty, the default value is now
  google.protobuf.Timestamp report_date = 14;
}

// QueryResponse contains the result of a datasource query.
message QueryResponse {
  // result_url is the URL to the result of the query.
  string result_url = 1;
  // result_size_bytes is the size of the result in bytes.
  int64 result_size_bytes = 2;
}

// SupportQueryRequest is the request to query a datasource with support permissions.
message SupportQueryRequest {
  // query_request is the query to execute.
  QueryRequest query_request = 1;
  // include debug information in the response
  bool debug = 2;
}

// SupportQueryResponse contains the result of a datasource query with support permissions.
message SupportQueryResponse {
  // result_url is the URL to the result of the query.
  string result_url = 1;
  // result_size_bytes is the size of the result in bytes.
  int64 result_size_bytes = 2;
  // the prql query string
  string prql = 3;
  // the sql query string
  string sql = 4;
  // the sql explain string
  string explain = 5;
}

// QueryExplainRequest is the request to retrieve debug data for a query.
message QueryExplainRequest {
  QueryRequest query_request = 1;
}

// QueryExplainResponse contains the result of a query explain.
message QueryExplainResponse {
  // result_url is the URL to the result of the query.
  string result_url = 1;
  // result_size_bytes is the size of the result in bytes.
  int64 result_size_bytes = 2;
  // the prql query string
  string prql = 3;
  // the sql query string
  string sql = 4;
  // the sql explain string
  string explain = 5;
}
