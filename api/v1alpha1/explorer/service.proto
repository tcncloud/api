syntax = "proto3";

package api.v1alpha1.explorer;

import "api/v1alpha1/explorer/entities.proto";
import "google/protobuf/timestamp.proto";

// ExplorerService is the service for the explorer API.
service ExplorerService {
  // ListDatasourceSchemas lists all accessible datasources and their schemas.
  rpc ListDatasourceSchemas(ListDatasourceSchemasRequest) returns (ListDatasourceSchemasResponse);
  // Query queries a datasource.
  rpc Query(QueryRequest) returns (QueryResponse);
}

// ListDatasourceSchemasRequest is the request to list datasource schemas.
message ListDatasourceSchemasRequest {
  // datasource_names is a table name filter for the datasources to list.
  repeated string datasource_names = 1;
  // datasource_type is the type of the datasource to list.
  // If not specified, all datasources will be listed.
  api.v1alpha1.explorer.DatasourceType datasource_type = 2;
}

// ListDatasourceSchemasResponse contains datasources and their schemas.
message ListDatasourceSchemasResponse {
  // list of schemas
  repeated api.v1alpha1.explorer.Schema schemas = 1;
}

// QueryRequest is the request to query a datasource.
message QueryRequest {
  // datasource_name is the name of the datasource to query.
  string datasource_name = 1;
  // datasource_type is the type of the datasource to query.
  api.v1alpha1.explorer.DatasourceType datasource_type = 2;
  // query is the query to execute.
  oneof query {
    // pipeline to be compiled to prql
    string pipeline = 3;
    // prql query to execute
    string prql = 4;
  }
  // org_id for ownership of the data
  repeated string org_ids = 5;
  // start_time is the start time of the query.
  google.protobuf.Timestamp start_time = 6;
  // end_time is the end time of the query.
  google.protobuf.Timestamp end_time = 7;
  // timezone is IESG timezone name
  // this is how the timezone is represented in the query
  string timezone = 8;
  // pipeline_parameters is the parameters for the pipeline.
  api.v1alpha1.explorer.Parameters pipeline_parameters = 9;
  // ui_trace_id is the trace id of the query.
  string ui_trace_id = 10;
  // comment is the comment for the query.
  string comment = 11;
  // format is the format of the result.
  string format = 12;
}

// QueryResponse contains the result of a datasource query.
message QueryResponse {
  // result_url is the URL to the result of the query.
  string result_url = 1;
  // result_size_bytes is the size of the result in bytes.
  int64 result_size_bytes = 2;
}
