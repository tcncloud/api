syntax = "proto3";

package api.v1alpha1.explorer;

// ExportFormat is an enum for the format of a report.
enum ExportFormat {
  REPORT_FORMAT_UNSPECIFIED = 0;
  REPORT_FORMAT_CSV = 1;
  REPORT_FORMAT_PARQUET = 2;
  REPORT_FORMAT_TSV = 3;
  REPORT_FORMAT_TXT = 4;
}

// SchemaType is an enum for the type of a schema field.
enum SchemaType {
  SCHEMA_TYPE_UNSPECIFIED = 0;
  SCHEMA_TYPE_INT = 2;
  SCHEMA_TYPE_FLOAT = 3;
  SCHEMA_TYPE_STRING = 5;
  SCHEMA_TYPE_BOOL = 6;
  SCHEMA_TYPE_TIMESTAMP = 7;

  SCHEMA_TYPE_INT_ARRAY = 8;
  SCHEMA_TYPE_FLOAT_ARRAY = 9;
  SCHEMA_TYPE_STRING_ARRAY = 10;
  SCHEMA_TYPE_BOOL_ARRAY = 11;

  SCHEMA_TYPE_MAP = 12;
}

// DatasourceType is an enum for the type of a datasource.
enum DatasourceType {
  DATASOURCE_TYPE_UNSPECIFIED = 0;
  DATASOURCE_TYPE_VFS = 1;
  DATASOURCE_TYPE_CLICKHOUSE = 2;
  DATASOURCE_TYPE_INSTANT_DATA = 3;
}

// SchemaField is a field in a schema.
message SchemaField {
  string name = 1;
  SchemaType column_type = 2;
  bool is_primary_key = 3;
  bool is_low_cardinality = 4;
  string column_description = 5;
  bool is_time_filter = 6;
  bool is_default_time_filter = 7;
  bool is_join_column = 8;
}

// Schema is a schema for a datasource.
message Schema {
  string name = 1;
  DatasourceType datasource_type = 2;
  repeated SchemaField fields = 3;
  string table_description = 4;
  string category = 5;
  string sub_category = 6;
}

// Parameter is a parameter for a query.
message Parameters {
  message Parameter {
    string value = 2;
    string data_type = 3;
  }
  map<string, Parameter> parameters = 1;
}

// Represents a result file, including its URL and size in bytes.
message ResultFile {
  string url = 1;
  int64 size_bytes = 2;
}

// Represents the type of result.
enum ResultType {
  // Unspecified is the raw result.
  RESULT_TYPE_UNSPECIFIED = 0;
  // Raw is the raw result from the pipeline with no formatting applied.
  RESULT_TYPE_FORMAT = 1;
  // Summary is the formatted summary result from the pipeline.
  RESULT_TYPE_SUMMARY = 2;
  // Report is the combined report of Format and Summary.
  RESULT_TYPE_REPORT = 3;
}

// QuoteCharacter specifies the quote character
enum QuoteCharacter {
  // Unspecified
  QUOTE_CHARACTER_UNSPECIFIED = 0;
  // Double Quote
  QUOTE_CHARACTER_DOUBLE_QUOTE = 1;
  // Single Quote
  QUOTE_CHARACTER_SINGLE_QUOTE = 2;
}

// Message for Export Options
message ExportOptions {
  // Delimiter for file exports
  string delimiter = 1;
  // Quote character for file exports
  QuoteCharacter quote_character = 2;
  // Flag to include header in file exports
  bool no_header = 3;
  // result format
  ExportFormat export_format = 4;
}
