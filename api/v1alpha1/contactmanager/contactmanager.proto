syntax = "proto3";

package api.v1alpha1.contactmanager;

import "api/commons/audit/audit.proto";
import "api/commons/classifier.proto";
import "api/commons/contactmanager.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// New Proto's For Get and List - Contact List and Contact Entries
message GetContactListRequest {
  google.protobuf.FieldMask request_mask = 1;
  string org_id = 2;
  int64 project_id = 3 [jstype = JS_STRING];
}

message GetContactListResponse {
  reserved 1;
  reserved "contact_list";
  repeated ContactManagerList contact_manager_list = 2;
}
message ListContactEntryListRequest {
  optional int64 contact_manager_list_id = 1 [jstype = JS_STRING];
  string org_id = 2 [deprecated = true];
  string project_id = 3;

  // pagination fields - returned page
  int32 page_size = 4;
  // pagination fields - page token
  string page_token = 5;
}

// List all Unencrypted Data. Encrypted Data would be sent On Double Click of the Record
// Seperate API to List All Encrypted Data
message ListContactEntryListResponse {
  reserved 1;
  reserved "contact_entry";
  repeated ContactManagerEntry contact_manager_entry = 2;
  string next_page_token = 3;
}

message GetEncContactEntryRequest {
  int64 contact_manager_entry_id = 1 [jstype = JS_STRING];
}

message GetEncContactEntryResponse {
  reserved 1;
  reserved "contact_entry";
  repeated ContactManagerEntry contact_manager_entry = 2;
}

message GetKYCEncContactEntryRequest {
  int64 project_id = 1 [jstype = JS_STRING];
  reserved 2, 3;
  reserved "entry_val", "min_kyc_limit";
  repeated ContactManagerEntryVal kyc_response = 4;
}

message GetKYCEncContactEntryResponse {
  bool verified = 1;
  repeated ContactManagerEntry contact_entry = 2;
}

message GetKYCKeysRequest {
  int64 project_sid = 1 [jstype = JS_STRING];
}

message GetKYCKeysResponse {
  repeated string entry_type = 1;
  reserved 2;
  reserved "kyc_limit";
}

// Common messages deprecated
message ContactManagerEntry {
  int64 contact_manager_entry_id = 1 [jstype = JS_STRING];
  int64 contact_manager_entry_list_id = 2 [
    jstype = JS_STRING,
    deprecated = true
  ];
  string key = 3 [deprecated = true];
  string value = 4 [deprecated = true];
  string type = 5 [deprecated = true];
  google.protobuf.Timestamp date_created = 6;
  api.commons.ContactEntryStatus status = 7;
  google.protobuf.Timestamp date_modified = 8;
  int64 ttl = 9;
  repeated string file_name = 10;
  repeated ContactField field = 11;
}

message ContactManagerList {
  int64 contact_manager_list_id = 1 [jstype = JS_STRING];
  string org_id = 2;
  int64 project_id = 3 [jstype = JS_STRING];
  string file_name = 4 [deprecated = true];
  string description = 5;
  // List of Columns In The Contact List. UI to render table based on this list
  repeated string list_details = 6 [deprecated = true];
  int64 ttl = 7 [
    deprecated = true,
    jstype = JS_STRING
  ];
  google.protobuf.Timestamp date_created = 8;
  bool is_deleted = 9;
  api.commons.ContactListStatus status = 10;
  string contact_manager_list_name = 11; //unique user friendly name for contact list
}

message ContactManagerEntryVal {
  string type = 1;
  string value = 2;
}

message AddContactEntryRequest {
  optional int64 contact_manager_list_id = 1 [jstype = JS_STRING];
  // List of entries of a given contact
  repeated Entry entry = 2 [deprecated = true];
  int64 project_sid = 3 [jstype = JS_STRING];
  repeated ContactField field = 4;
}

message Entry {
  option deprecated = true;
  string name = 1;
  string value = 2;
  string type = 3;
}

message AddContactEntryResponse {
  // contact_manager_entry_list_id
  int64 contact_id = 1 [jstype = JS_STRING];
}

message EditContactEntryRequest {
  optional int64 contact_manager_list_id = 1;
  int64 contact_manager_entry_id = 2;
  repeated EditedEntry edited_entry = 3 [deprecated = true];
  repeated ContactField field = 4;
}

message EditedEntry {
  option deprecated = true;
  int64 contact_manager_entry_list_id = 1;
  string name = 2;
  string value = 3; // The new value to be updated
  string type = 4;
}

message ContactField {
  string name = 1;
  string value = 2;
  string type = 3;
}

message EditContactEntryResponse {
  repeated ContactField field = 1; //list of edited/inserted fields
}

message ListContactsByEntityRequest {
  int64 project_id = 1 [jstype = JS_STRING]; //Project Id of the contact
  string entity_id = 2; //Id of entity to be referenced with Contact, e.g: Ticket Code
}

message ListContactsByEntityResponse {
  // Contacts associated to the entity
  repeated ContactManagerEntry contact_manager_entry = 1;
}

message GetContactFieldTypeRequest {
  // Field name to be analyzed by presidio
  string field_name = 1;
  // Field value to be analyzed by presidio
  string field_value = 2;
  // Field Type - optional to provide more info
  optional api.commons.ClassifierEntityType field_type = 3;
}

message GetContactFieldTypeResponse {
  // Field type return on presidio analysis
  api.commons.ClassifierEntityType field_type = 1;
}

message ListContactActivityLogRequest {
  string org_id = 1;
  string project_id = 2;
  int64 contact_manager_entry_id = 3 [jstype = JS_STRING];
}

message ListContactActivityLogResponse {
  repeated ContactActivityLog contact_activity_log = 1;
}

message ContactActivityLog {
  string org_id = 1;
  string project_id = 2;
  int64 contact_manager_entry_id = 3 [jstype = JS_STRING];
  string event_user = 4;
  // the retrieved audit event
  api.commons.audit.AuditEvent event = 5;
}
